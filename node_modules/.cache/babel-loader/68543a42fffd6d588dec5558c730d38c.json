{"ast":null,"code":"var _jsxFileName = \"D:\\\\nodejs\\\\Frontend Assignemnt 02 Admin App\\\\src\\\\components\\\\addRoom\\\\AddRoom.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"../../util/axios\";\nimport { useContext, useEffect, useState } from 'react';\nimport './AddRoom.css';\nimport { useNavigate } from \"react-router-dom\";\nimport APIContext from \"../../store/API-context\";\nimport PageContainer from \"../pageContainer/PageContainer\";\nimport Card from \"../UI/Card\";\nimport Input from \"../UI/Input\";\nimport { validLength, validNumber, validRequire } from \"../../util/validators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddRoom = () => {\n  _s();\n\n  const {\n    hotels\n  } = useContext(APIContext);\n  const [title, setTitle] = useState({\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [validLength({\n      min: 4\n    }), validRequire]\n  });\n  const [description, setDescription] = useState({\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [validLength({\n      min: 4\n    }), validRequire]\n  });\n  const [price, setPrice] = useState({\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [validNumber({\n      min: 0\n    }), validRequire]\n  });\n  const [maxPeople, setMaxPeople] = useState({\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [validNumber({\n      min: 1\n    }), validRequire]\n  });\n  const [name, setName] = useState({\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [validLength({\n      min: 4\n    }), validRequire]\n  });\n  const defaultHotel = \"Choose a hotel\";\n  const [hotel, setHotel] = useState({\n    value: defaultHotel,\n    valid: false,\n    touched: false,\n    validators: [validSelect({\n      defaultSelect: defaultHotel\n    })]\n  });\n  const navigate = useNavigate();\n\n  const addRoomHandler = e => {\n    e.preventDefault(); // name.split(',').map(i => i*1).find(i => isNaN(i)) !== undefined ||\n    // name.split(',').filter((v, i, arr) => arr.indexOf(v) === i).length !== name.length ||\n    // name.split(',').filter(v => v !== \"\").length !== name.length\n\n    if (isValidTitle === false || isValidDescription === false || isValidPrice === false || isValidMaxPeople === false || isValidName === false || isValidHotel === false) {\n      return;\n    }\n\n    const addRoom = {\n      title: title.split(' ').map(i => i[0].toUpperCase() + i.substring(1)).join(' '),\n      description: description.split(' ').join(' ').charAt(0).toUpperCase() + description.split(' ').join(' ').slice(1),\n      price: price,\n      maxPeople: maxPeople,\n      name: name.split(',').map(Number),\n      hotel: hotel\n    };\n    axios.post('/room/add-room', addRoom).then(res => console.log(res)).catch(err => console.log(err));\n    console.log(name.split(',').map(Number));\n    navigate('/room');\n    console.log(isValidName);\n    console.log(\"arRooms \" + (isValidName ? \"\" : \"labelInvalid\")); // console.log(!name);\n    // console.log(name.split(',').map(i => i*1).find(i => isNaN(i)) !== undefined);\n    // console.log(name.split(',').filter((v, i, arr) => arr.indexOf(v) === i).length !== name.split(',').length);\n    // console.log(name.split(',').filter(v => v !== \"\").length !== name.split(',').length);\n    // console.log(name.split(',').map(i => i*1).find(i => isNaN(i)) !== undefined || name.split(',').filter((v, i, arr) => arr.indexOf(v) === i).length !== name.split(',').length || name.split(',').filter(v => v !== \"\").length !== name.split(',').length);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"ahCard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listTitle ahListTitle\",\n        children: \"add new Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"ahCardForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"formControl\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          id: \"title\",\n          isValid: isValidTitle,\n          label: \"Title\",\n          type: \"text\",\n          placeholder: \"2 bed room\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"description\",\n          isValid: isValidDescription,\n          label: \"Description\",\n          type: \"text\",\n          placeholder: \"King size bed, 1 bathroom\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"price\",\n          isValid: isValidPrice,\n          label: \"Price\",\n          type: \"number\",\n          placeholder: \"100\",\n          value: price,\n          onChange: e => setPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"maxPeople\",\n          isValid: isValidMaxPeople,\n          label: \"Max People\",\n          type: \"number\",\n          placeholder: \"2\",\n          value: maxPeople,\n          onChange: e => setMaxPeople(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputFormControl\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formLabel \" + (isValidName ? \"\" : \"labelInvalid\"),\n            children: \"Rooms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"arRooms\",\n            className: \"arRooms \" + (isValidName ? \"\" : \"labelInvalid\"),\n            value: name,\n            onChange: e => setName(e.target.value),\n            rows: \"3\",\n            cols: \"50\" // placeholder=\"Give a comma between room and numbers.\"\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputFormControl\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formLabel \" + (isValidHotel ? \"\" : \"labelInvalid\"),\n            children: \"Choose a hotel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"arHotel\",\n            id: \"arHotel\",\n            className: \"arHotel \" + (isValidHotel ? \"\" : \"labelInvalid\"),\n            value: hotel,\n            onChange: e => setHotel(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Choose a hotel\",\n              children: \"Choose a hotel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), hotels.map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: i._id,\n              children: i.name\n            }, i._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnSend\",\n          onClick: addRoomHandler,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddRoom, \"EojR+fyFFxgB3+pYcx1A+MfPpoo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AddRoom;\nexport default AddRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRoom\");","map":{"version":3,"sources":["D:/nodejs/Frontend Assignemnt 02 Admin App/src/components/addRoom/AddRoom.jsx"],"names":["axios","useContext","useEffect","useState","useNavigate","APIContext","PageContainer","Card","Input","validLength","validNumber","validRequire","AddRoom","hotels","title","setTitle","value","valid","touched","validators","min","description","setDescription","price","setPrice","maxPeople","setMaxPeople","name","setName","defaultHotel","hotel","setHotel","validSelect","defaultSelect","navigate","addRoomHandler","e","preventDefault","isValidTitle","isValidDescription","isValidPrice","isValidMaxPeople","isValidName","isValidHotel","addRoom","split","map","i","toUpperCase","substring","join","charAt","slice","Number","post","then","res","console","log","catch","err","target","_id"],"mappings":"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","sourcesContent":["import axios from \"../../util/axios\";\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport './AddRoom.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport APIContext from \"../../store/API-context\";\r\nimport PageContainer from \"../pageContainer/PageContainer\";\r\nimport Card from \"../UI/Card\";\r\nimport Input from \"../UI/Input\";\r\nimport { validLength, validNumber, validRequire } from \"../../util/validators\";\r\n\r\nconst AddRoom = () => {\r\n  const { hotels } = useContext(APIContext);\r\n\r\n  const [title, setTitle] = useState({\r\n    value: '',\r\n    valid: false,\r\n    touched: false,\r\n    validators: [validLength({ min: 4 }), validRequire]\r\n  });\r\n  const [description, setDescription] = useState({\r\n    value: '',\r\n    valid: false,\r\n    touched: false,\r\n    validators: [validLength({ min: 4 }), validRequire]\r\n  });\r\n  const [price, setPrice] = useState({\r\n    value: '',\r\n    valid: false,\r\n    touched: false,\r\n    validators: [validNumber({ min: 0 }), validRequire]\r\n  });\r\n  const [maxPeople, setMaxPeople] = useState({\r\n    value: '',\r\n    valid: false,\r\n    touched: false,\r\n    validators: [validNumber({ min: 1 }), validRequire]\r\n  });\r\n  const [name, setName] = useState({\r\n    value: '',\r\n    valid: false,\r\n    touched: false,\r\n    validators: [validLength({ min: 4 }), validRequire]\r\n  });\r\n  const defaultHotel = \"Choose a hotel\"\r\n  const [hotel, setHotel] = useState({\r\n    value: defaultHotel,\r\n    valid: false,\r\n    touched: false,\r\n    validators: [validSelect({ defaultSelect: defaultHotel })]\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const addRoomHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    // name.split(',').map(i => i*1).find(i => isNaN(i)) !== undefined ||\r\n    // name.split(',').filter((v, i, arr) => arr.indexOf(v) === i).length !== name.length ||\r\n    // name.split(',').filter(v => v !== \"\").length !== name.length\r\n\r\n    if(\r\n      isValidTitle === false ||\r\n      isValidDescription === false ||\r\n      isValidPrice === false ||\r\n      isValidMaxPeople === false ||\r\n      isValidName === false ||\r\n      isValidHotel === false\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const addRoom = {\r\n      title: title.split(' ').map(i => i[0].toUpperCase() + i.substring(1)).join(' '),\r\n      description: (description.split(' ').join(' ').charAt(0).toUpperCase() + description.split(' ').join(' ').slice(1)),\r\n      price: price,\r\n      maxPeople: maxPeople,\r\n      name: name.split(',').map(Number),\r\n      hotel: hotel\r\n    }\r\n\r\n    axios\r\n      .post('/room/add-room', addRoom)\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err))\r\n\r\n    console.log(name.split(',').map(Number));\r\n\r\n    navigate('/room');\r\n\r\n    console.log(isValidName);\r\n    console.log(\"arRooms \" + (isValidName ? \"\" : \"labelInvalid\"));\r\n    // console.log(!name);\r\n    // console.log(name.split(',').map(i => i*1).find(i => isNaN(i)) !== undefined);\r\n    // console.log(name.split(',').filter((v, i, arr) => arr.indexOf(v) === i).length !== name.split(',').length);\r\n    // console.log(name.split(',').filter(v => v !== \"\").length !== name.split(',').length);\r\n    // console.log(name.split(',').map(i => i*1).find(i => isNaN(i)) !== undefined || name.split(',').filter((v, i, arr) => arr.indexOf(v) === i).length !== name.split(',').length || name.split(',').filter(v => v !== \"\").length !== name.split(',').length);\r\n  }\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Card className=\"ahCard\">\r\n        <div className=\"listTitle ahListTitle\">add new Room</div>\r\n      </Card>\r\n      <Card className=\"ahCardForm\">\r\n        <form className=\"formControl\">\r\n          <Input \r\n            id=\"title\"\r\n            isValid={isValidTitle}\r\n            label=\"Title\"\r\n            type=\"text\"\r\n            placeholder=\"2 bed room\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n          <Input \r\n            id=\"description\"\r\n            isValid={isValidDescription}\r\n            label=\"Description\"\r\n            type=\"text\"\r\n            placeholder=\"King size bed, 1 bathroom\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n          <Input \r\n            id=\"price\"\r\n            isValid={isValidPrice}\r\n            label=\"Price\"\r\n            type=\"number\"\r\n            placeholder=\"100\"\r\n            value={price}\r\n            onChange={(e) => setPrice(e.target.value)}\r\n          />\r\n          <Input \r\n            id=\"maxPeople\"\r\n            isValid={isValidMaxPeople}\r\n            label=\"Max People\"\r\n            type=\"number\"\r\n            placeholder=\"2\"\r\n            value={maxPeople}\r\n            onChange={(e) => setMaxPeople(e.target.value)}\r\n          />\r\n          <div className=\"inputFormControl\">\r\n            <div \r\n              className={\"formLabel \" + (isValidName ? \"\" : \"labelInvalid\")}\r\n              >Rooms\r\n            </div>\r\n            <textarea \r\n              name=\"arRooms\" \r\n              className={\"arRooms \" + (isValidName ? \"\" : \"labelInvalid\")} \r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              rows=\"3\"\r\n              cols=\"50\"\r\n              // placeholder=\"Give a comma between room and numbers.\"\r\n            />\r\n          </div>\r\n          <div className=\"inputFormControl\">\r\n            <div \r\n              className={\"formLabel \" + (isValidHotel ? \"\" : \"labelInvalid\")}\r\n              >Choose a hotel\r\n            </div>\r\n            <select \r\n              name=\"arHotel\" \r\n              id=\"arHotel\"\r\n              className={\"arHotel \" + (isValidHotel ? \"\" : \"labelInvalid\")} \r\n              value={hotel}\r\n              onChange={(e) => setHotel(e.target.value)}\r\n            >\r\n              <option value=\"Choose a hotel\">Choose a hotel</option>\r\n              {hotels.map(i =>\r\n                <option \r\n                  key={i._id}\r\n                  value={i._id}\r\n                >{i.name}</option>\r\n              )}\r\n            </select>\r\n          </div>\r\n          <button \r\n            className=\"btnSend\"\r\n            onClick={addRoomHandler}\r\n          >Send\r\n          </button>\r\n        </form>\r\n      </Card>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default AddRoom;"]},"metadata":{},"sourceType":"module"}