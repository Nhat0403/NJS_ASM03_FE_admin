{"ast":null,"code":"var _jsxFileName = \"D:\\\\funix\\\\NJS301x_1.0-A_VN L\\u1EADp tr\\xECnh Web Back-End v\\u1EDBi NodeJS\\\\assignment 03\\\\Frontend Assignemnt 03 Admin App\\\\src\\\\components\\\\chatList\\\\ChatList.jsx\",\n    _s = $RefreshSig$();\n\nimport queryString from 'query-string';\nimport { useEffect, useState } from 'react';\nimport ChatRoomsAPI from '../../API/ChatRoomsAPI';\nimport { onBlurHandler, onChangeHanlder, valid } from '../../util/validators';\nimport Input from '../UI/Input';\nimport './ChatList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatList = () => {\n  _s();\n\n  const [chatSearch, setChatSearch] = useState({\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [valid({\n      type: true\n    })]\n  });\n  const [chatList, setChatList] = useState([]);\n  const [message, setMessage] = useState([]);\n  const [textMessage, setTextMessage] = useState('');\n  const [roomId, setRoomId] = useState('');\n  const [load, setLoad] = useState(false);\n  const cookieId = document.cookie.split('=')[1];\n  console.log(chatSearch.value);\n  useEffect(() => {\n    const fetchData = async () => {\n      const params = {\n        cookieId: cookieId,\n        chatSearch: chatSearch.value\n      };\n      const query = '?' + queryString.stringify(params);\n      const response = await ChatRoomsAPI.searchMessage(query);\n      setChatList(response);\n    };\n\n    fetchData();\n  }, [chatSearch]);\n  console.log(chatSearch.value);\n  console.log(chatList);\n\n  const onChat = e => {\n    e.preventDefault();\n    setRoomId(e.target); // ChatRoomsAPI.getMessageByRoomId(roomId)\n    // setMessage(response.content);\n\n    console.log(roomId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n      children: \"Apps / Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatInfo flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatSearch\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            control: \"input\",\n            type: \"search\",\n            id: \"chatSearch\",\n            placeholder: \"Search Contact\",\n            required: true,\n            onChange: e => onChangeHanlder(e, setChatSearch, chatSearch.validators),\n            onBlur: e => onBlurHandler(e, setChatSearch, chatSearch.validators),\n            value: chatSearch.value,\n            isValid: chatSearch.valid,\n            isTouched: chatSearch.touched,\n            className: \"chatListItem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), chatList && chatList.map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex chatListItem\",\n            onClick: onChat,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"avatar\",\n              src: \"https://img.icons8.com/color/36/000000/administrator-male.png\",\n              alt: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: value._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)]\n          }, value._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBox flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatMedia\",\n            children: message && message.map(value => !value.is_admin ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media media-chat media-chat-reverse\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"media-body\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"You: \", value.message]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)\n            }, value._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media media-chat\",\n              children: [' ', /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"avatar\",\n                src: \"https://img.icons8.com/color/36/000000/administrator-male.png\",\n                alt: \"...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"media-body\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"C\\u1ED9ng t\\xE1c vi\\xEAn: \", value.message]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 23\n                }, this)\n              }, value.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this)]\n            }, value._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatField\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatList, \"8fxYDRYbXfjGAW52seLn9mXFyIU=\");\n\n_c = ChatList;\nexport default ChatList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"sources":["D:/funix/NJS301x_1.0-A_VN Lập trình Web Back-End với NodeJS/assignment 03/Frontend Assignemnt 03 Admin App/src/components/chatList/ChatList.jsx"],"names":["queryString","useEffect","useState","ChatRoomsAPI","onBlurHandler","onChangeHanlder","valid","Input","ChatList","chatSearch","setChatSearch","value","touched","validators","type","chatList","setChatList","message","setMessage","textMessage","setTextMessage","roomId","setRoomId","load","setLoad","cookieId","document","cookie","split","console","log","fetchData","params","query","stringify","response","searchMessage","onChat","e","preventDefault","target","map","_id","is_admin","id"],"mappings":"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","sourcesContent":["import queryString from 'query-string';\r\nimport { useEffect, useState } from 'react';\r\nimport ChatRoomsAPI from '../../API/ChatRoomsAPI';\r\nimport { onBlurHandler, onChangeHanlder, valid } from '../../util/validators';\r\nimport Input from '../UI/Input';\r\nimport './ChatList.css';\r\n\r\nconst ChatList = () => {\r\n  const [chatSearch, setChatSearch] = useState({\r\n    value: '',\r\n    valid: false,\r\n    touched: false,\r\n    validators: [valid({ type: true })]\r\n  });\r\n  const [chatList, setChatList] = useState([]);\r\n  const [message, setMessage] = useState([]);\r\n  const [textMessage, setTextMessage] = useState('');\r\n  const [roomId, setRoomId] = useState('');\r\n  const [load, setLoad] = useState(false);\r\n  const cookieId = document.cookie.split('=')[1];\r\n\r\n  console.log(chatSearch.value);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async() => {\r\n      const params = {\r\n        cookieId: cookieId,\r\n        chatSearch: chatSearch.value\r\n      }\r\n      const query = '?' + queryString.stringify(params);\r\n      const response = await ChatRoomsAPI.searchMessage(query);\r\n      setChatList(response);\r\n    }\r\n    fetchData();\r\n  }, [chatSearch])\r\n  console.log(chatSearch.value);\r\n  console.log(chatList);\r\n\r\n  const onChat = (e) => {\r\n    e.preventDefault();\r\n    setRoomId(e.target);\r\n    // ChatRoomsAPI.getMessageByRoomId(roomId)\r\n    // setMessage(response.content);\r\n    console.log(roomId);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Chat</h1>\r\n      <em>Apps / Chat</em>\r\n      <div className='bg-white container'>\r\n        <div className=\"chatInfo flex-column\">\r\n          <div className=\"chatSearch\">\r\n            <Input \r\n              control='input'\r\n              type='search'\r\n              id='chatSearch'\r\n              placeholder='Search Contact'\r\n              required={true}\r\n              onChange={e => onChangeHanlder(e, setChatSearch, chatSearch.validators)}\r\n              onBlur={e => onBlurHandler(e, setChatSearch, chatSearch.validators)}\r\n              value={chatSearch.value}\r\n              isValid={chatSearch.valid}\r\n              isTouched={chatSearch.touched}\r\n              className='chatListItem'\r\n            />\r\n            {chatList && chatList.map(value => \r\n              <div \r\n                key={value._id} \r\n                className='flex chatListItem'\r\n                onClick={onChat}\r\n              >\r\n                <img\r\n                  className='avatar'\r\n                  src='https://img.icons8.com/color/36/000000/administrator-male.png'\r\n                  alt='...'\r\n                />\r\n                <div>\r\n                  <p>{value._id}</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"chatBox flex-column\">\r\n            <div className=\"chatMedia\">\r\n              {message && message.map(value =>\r\n                !value.is_admin ? (\r\n                  <div\r\n                    className='media media-chat media-chat-reverse'\r\n                    key={value._id}>\r\n                    <div className='media-body'>\r\n                      <p>You: {value.message}</p>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    className='media media-chat'\r\n                    key={value._id}>\r\n                    {' '}\r\n                    <img\r\n                      className='avatar'\r\n                      src='https://img.icons8.com/color/36/000000/administrator-male.png'\r\n                      alt='...'\r\n                    />\r\n                    <div className='media-body' key={value.id}>\r\n                      <p>Cộng tác viên: {value.message}</p>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              )}\r\n            </div>\r\n            <div className=\"chatField\"></div>\r\n          </div>   \r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ChatList;"]},"metadata":{},"sourceType":"module"}