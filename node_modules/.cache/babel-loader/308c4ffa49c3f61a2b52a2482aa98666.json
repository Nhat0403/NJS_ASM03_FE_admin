{"ast":null,"code":"// export const validate = (value, set, validators) => {\n//   let valid = true;\n//   for(const validator of validators) {\n//     valid = valid && validator(value);\n//   };\n//   set(prev => ({\n//     ...prev,\n//     value: value,\n//     valid: valid\n//   }));\n// };\nimport { generateBase64FromImage } from \"./image\"; // export const onChangeHanlder = (e, setInput, validators) => {\n//   const value = !e.target.files ? e.target.value : e.target.files;\n//   validate(value, setInput, validators);\n// };\n\nexport const onBlurHandler = (e, setInput, validators) => {\n  const value = !e.target.files ? e.target.value : e.target.files;\n  validate(value, setInput, validators);\n  setInput(prev => ({ ...prev,\n    touched: true\n  }));\n};\nexport const validRequire = value => value.trim() !== '';\nexport const validLength = config => value => {\n  let isValid = true;\n\n  if (config.min) {\n    isValid = isValid && value.toString().trim().length >= config.min;\n  }\n\n  if (config.max) {\n    isValid = isValid && value.toString().trim().length <= config.max;\n  }\n\n  return isValid;\n}; // export const validEmail = value => {\n//   /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(\n//     value\n//   );\n// };\n\nexport const validEmail = value => value.includes('@');\nexport const validSelect = config => value => {\n  let isValid = true;\n\n  if (config.defaultSelect) {\n    isValid = isValid && value !== config.defaultSelect;\n  }\n\n  return isValid;\n};\nexport const validNumber = config => value => {\n  let isValid = true;\n\n  if (config.min) {\n    isValid = isValid && +value > config.min;\n  }\n\n  if (config.max) {\n    isValid = isValid && +value <= config.max;\n  }\n\n  return isValid;\n};\nexport const valid = config => value => {\n  let isValid = true;\n  isValid = isValid && config.type;\n  return isValid;\n};","map":{"version":3,"sources":["D:/funix/NJS301x_1.0-A_VN Lập trình Web Back-End với NodeJS/assignment 03/Frontend Assignemnt 03 Admin App/src/util/validators.js"],"names":["generateBase64FromImage","onBlurHandler","e","setInput","validators","value","target","files","validate","prev","touched","validRequire","trim","validLength","config","isValid","min","toString","length","max","validEmail","includes","validSelect","defaultSelect","validNumber","valid","type"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,uBAAT,QAAwC,SAAxC,C,CAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,CAAD,EAAIC,QAAJ,EAAcC,UAAd,KAA6B;AACxD,QAAMC,KAAK,GAAG,CAACH,CAAC,CAACI,MAAF,CAASC,KAAV,GAAkBL,CAAC,CAACI,MAAF,CAASD,KAA3B,GAAmCH,CAAC,CAACI,MAAF,CAASC,KAA1D;AACAC,EAAAA,QAAQ,CAACH,KAAD,EAAQF,QAAR,EAAkBC,UAAlB,CAAR;AACAD,EAAAA,QAAQ,CAACM,IAAI,KAAK,EAChB,GAAGA,IADa;AAEhBC,IAAAA,OAAO,EAAE;AAFO,GAAL,CAAL,CAAR;AAID,CAPM;AASP,OAAO,MAAMC,YAAY,GAAGN,KAAK,IAAIA,KAAK,CAACO,IAAN,OAAiB,EAA/C;AAEP,OAAO,MAAMC,WAAW,GAAGC,MAAM,IAAIT,KAAK,IAAI;AAC5C,MAAIU,OAAO,GAAG,IAAd;;AACA,MAAGD,MAAM,CAACE,GAAV,EAAe;AACbD,IAAAA,OAAO,GAAGA,OAAO,IAAIV,KAAK,CAACY,QAAN,GAAiBL,IAAjB,GAAwBM,MAAxB,IAAkCJ,MAAM,CAACE,GAA9D;AACD;;AACD,MAAGF,MAAM,CAACK,GAAV,EAAe;AACbJ,IAAAA,OAAO,GAAGA,OAAO,IAAIV,KAAK,CAACY,QAAN,GAAiBL,IAAjB,GAAwBM,MAAxB,IAAkCJ,MAAM,CAACK,GAA9D;AACD;;AACD,SAAOJ,OAAP;AACD,CATM,C,CAWP;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMK,UAAU,GAAGf,KAAK,IAAIA,KAAK,CAACgB,QAAN,CAAe,GAAf,CAA5B;AAEP,OAAO,MAAMC,WAAW,GAAGR,MAAM,IAAIT,KAAK,IAAI;AAC5C,MAAIU,OAAO,GAAG,IAAd;;AACA,MAAGD,MAAM,CAACS,aAAV,EAAyB;AACvBR,IAAAA,OAAO,GAAGA,OAAO,IAAIV,KAAK,KAAKS,MAAM,CAACS,aAAtC;AACD;;AACD,SAAOR,OAAP;AACD,CANM;AAQP,OAAO,MAAMS,WAAW,GAAGV,MAAM,IAAIT,KAAK,IAAI;AAC5C,MAAIU,OAAO,GAAG,IAAd;;AACA,MAAGD,MAAM,CAACE,GAAV,EAAe;AACbD,IAAAA,OAAO,GAAGA,OAAO,IAAI,CAACV,KAAD,GAASS,MAAM,CAACE,GAArC;AACD;;AACD,MAAGF,MAAM,CAACK,GAAV,EAAe;AACbJ,IAAAA,OAAO,GAAGA,OAAO,IAAI,CAACV,KAAD,IAAUS,MAAM,CAACK,GAAtC;AACD;;AACD,SAAOJ,OAAP;AACD,CATM;AAWP,OAAO,MAAMU,KAAK,GAAGX,MAAM,IAAIT,KAAK,IAAI;AACtC,MAAIU,OAAO,GAAG,IAAd;AACAA,EAAAA,OAAO,GAAGA,OAAO,IAAID,MAAM,CAACY,IAA5B;AACA,SAAOX,OAAP;AACD,CAJM","sourcesContent":["// export const validate = (value, set, validators) => {\r\n//   let valid = true;\r\n//   for(const validator of validators) {\r\n//     valid = valid && validator(value);\r\n//   };\r\n//   set(prev => ({\r\n//     ...prev,\r\n//     value: value,\r\n//     valid: valid\r\n//   }));\r\n// };\r\n\r\nimport { generateBase64FromImage } from \"./image\";\r\n\r\n// export const onChangeHanlder = (e, setInput, validators) => {\r\n//   const value = !e.target.files ? e.target.value : e.target.files;\r\n//   validate(value, setInput, validators);\r\n// };\r\n\r\nexport const onBlurHandler = (e, setInput, validators) => {\r\n  const value = !e.target.files ? e.target.value : e.target.files;\r\n  validate(value, setInput, validators);\r\n  setInput(prev => ({\r\n    ...prev,\r\n    touched: true\r\n  }));\r\n};\r\n\r\nexport const validRequire = value => value.trim() !== '';\r\n\r\nexport const validLength = config => value => {\r\n  let isValid = true;\r\n  if(config.min) {\r\n    isValid = isValid && value.toString().trim().length >= config.min;\r\n  }\r\n  if(config.max) {\r\n    isValid = isValid && value.toString().trim().length <= config.max;\r\n  }\r\n  return isValid;\r\n};\r\n\r\n// export const validEmail = value => {\r\n//   /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(\r\n//     value\r\n//   );\r\n// };\r\n\r\nexport const validEmail = value => value.includes('@');\r\n\r\nexport const validSelect = config => value => {\r\n  let isValid = true;\r\n  if(config.defaultSelect) {\r\n    isValid = isValid && value !== config.defaultSelect;\r\n  }\r\n  return isValid;\r\n};\r\n\r\nexport const validNumber = config => value => {\r\n  let isValid = true;\r\n  if(config.min) {\r\n    isValid = isValid && +value > config.min;\r\n  }\r\n  if(config.max) {\r\n    isValid = isValid && +value <= config.max;\r\n  }\r\n  return isValid;\r\n};\r\n\r\nexport const valid = config => value => {\r\n  let isValid = true;\r\n  isValid = isValid && config.type;\r\n  return isValid;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}