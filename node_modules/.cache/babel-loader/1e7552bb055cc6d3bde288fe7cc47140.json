{"ast":null,"code":"var _jsxFileName = \"D:\\\\nodejs\\\\Frontend Assignemnt 02 Admin App\\\\src\\\\components\\\\auth\\\\SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"../../util/axios\";\nimport { useContext, useState } from \"react\";\nimport './auth.css';\nimport { useDispatch } from \"react-redux\";\nimport { authActions } from \"../hook/auth\";\nimport { currentUser, saveToStorage, setTouched } from \"../hook/lib\";\nimport { useNavigate } from \"react-router-dom\";\nimport APIContext from \"../../store/API-context\";\nimport Input from \"../UI/Input\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport { validLength, validRequire } from \"../../util/validators\";\nimport PageContainer from \"../pageContainer/PageContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = pros => {\n  _s();\n\n  const [username, setUsername] = useState({\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [validLength({\n      min: 4\n    }), validRequire]\n  });\n  const [password, setPassword] = useState({\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [validLength({\n      min: 4\n    }), validRequire]\n  });\n  const [error, setError] = useState(); // const { users } = useAPI();\n\n  const {\n    users\n  } = useContext(APIContext);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onChangeHanlder = (e, setInput, validators) => {\n    const value = e.target.value;\n    let valid = true;\n\n    for (const validator of validators) {\n      valid = valid && validator(value);\n    }\n\n    setInput(prev => ({ ...prev,\n      value: value,\n      valid: valid\n    }));\n  };\n\n  const onBlurHandler = (e, set) => {\n    set(prev => ({ ...prev,\n      touched: true\n    }));\n  };\n\n  const signUpHandler = e => {\n    e.preventDefault();\n    setTouched(setUsername);\n    setTouched(setPassword);\n\n    if (!username.valid || !password.valid) {\n      return setError({\n        title: 'Validation failed!',\n        message: 'Invalid username or password!'\n      });\n    }\n\n    if (username.valid && password.valid) {\n      axios.post('/user/signup', {\n        username: username.value,\n        password: password.value,\n        isAdmin: true\n      }).then(res => {\n        if (res.status === 200 || res.status === 201) {\n          // console.log(res);\n          dispatch(authActions.login());\n\n          while (currentUser.length > 0) {\n            currentUser.pop();\n          }\n\n          ;\n          currentUser.push(res.data);\n          saveToStorage('currentUser', currentUser);\n          navigate('/');\n        }\n      }).catch(err => {\n        if (err.response.status) {\n          setError({\n            title: 'Validation failed!',\n            message: err.response.data.message\n          });\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onConfirm: () => setError(null),\n      error: !!error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"centered\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"SignUp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            control: \"input\",\n            id: \"username\",\n            type: \"text\",\n            placeholder: \"username\",\n            required: true,\n            onChange: e => onChangeHanlder(e, setUsername, username.validators),\n            onBlur: e => onBlurHandler(e, setUsername),\n            value: username.value,\n            isValid: username.valid,\n            isTouched: username.touched\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            control: \"input\",\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"password\",\n            onChange: e => onChangeHanlder(e, setPassword, password.validators),\n            onBlur: e => onBlurHandler(e, setPassword),\n            required: true,\n            value: password.value,\n            isValid: password.valid,\n            isTouched: password.touched\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn\",\n            onClick: signUpHandler,\n            children: \"SignUp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SignUp, \"PFKgd7ORks0EjXmvodTgXodvGXI=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/nodejs/Frontend Assignemnt 02 Admin App/src/components/auth/SignUp.jsx"],"names":["axios","useContext","useState","useDispatch","authActions","currentUser","saveToStorage","setTouched","useNavigate","APIContext","Input","ErrorModal","validLength","validRequire","PageContainer","SignUp","pros","username","setUsername","value","valid","touched","validators","min","password","setPassword","error","setError","users","dispatch","navigate","onChangeHanlder","e","setInput","target","validator","prev","onBlurHandler","set","signUpHandler","preventDefault","title","message","post","isAdmin","then","res","status","login","length","pop","push","data","catch","err","response"],"mappings":"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","sourcesContent":["import axios from \"../../util/axios\";\r\nimport { useContext, useState } from \"react\";\r\nimport './auth.css'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authActions } from \"../hook/auth\";\r\nimport { currentUser, saveToStorage, setTouched } from \"../hook/lib\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport APIContext from \"../../store/API-context\";\r\nimport Input from \"../UI/Input\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\nimport { validLength, validRequire } from \"../../util/validators\";\r\nimport PageContainer from \"../pageContainer/PageContainer\";\r\n\r\nconst SignUp = (pros) => {\r\n  const [username, setUsername] = useState({\r\n    value: '',\r\n    valid: false,\r\n    touched: false,\r\n    validators: [validLength({ min: 4 }), validRequire]\r\n  });\r\n  const [password, setPassword] = useState({\r\n    value: '',\r\n    valid: false,\r\n    touched: false,\r\n    validators: [validLength({ min: 4 }), validRequire]\r\n  });\r\n  const [error, setError] = useState();\r\n\r\n  // const { users } = useAPI();\r\n  const { users } = useContext(APIContext);\r\n \r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const onChangeHanlder = (e, setInput, validators) => {\r\n    const value = e.target.value;\r\n    let valid = true;\r\n    for(const validator of validators) {\r\n      valid = valid && validator(value);\r\n    }\r\n    setInput(prev => ({\r\n      ...prev,\r\n      value: value,\r\n      valid: valid\r\n    }));\r\n  };\r\n\r\n  const onBlurHandler = (e, set) => {\r\n    set(prev => ({\r\n      ...prev,\r\n      touched: true\r\n    }));\r\n  };\r\n\r\n  const signUpHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    setTouched(setUsername);\r\n    setTouched(setPassword);\r\n\r\n    if(!username.valid || !password.valid) {\r\n      return setError({\r\n        title: 'Validation failed!',\r\n        message: 'Invalid username or password!'\r\n      })\r\n    }\r\n\r\n    if(username.valid && password.valid) {\r\n      axios.post('/user/signup', {\r\n        username: username.value,\r\n        password: password.value,\r\n        isAdmin: true\r\n      })\r\n      .then(res => {\r\n        if(res.status === 200 || res.status === 201) {\r\n          // console.log(res);\r\n          dispatch(authActions.login());\r\n          while(currentUser.length > 0) {\r\n            currentUser.pop();\r\n          };\r\n          currentUser.push(res.data);\r\n          saveToStorage('currentUser', currentUser);\r\n          navigate('/');\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if(err.response.status) {\r\n          setError({\r\n            title: 'Validation failed!',\r\n            message: err.response.data.message\r\n          })\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && (\r\n        <ErrorModal \r\n          title={error.title}\r\n          message={error.message}\r\n          onConfirm={() => setError(null)}\r\n          error={!!error}\r\n        />\r\n      )}\r\n    <PageContainer>\r\n      <main className=\"centered\">\r\n        <h1>SignUp</h1>\r\n        <form className=\"form-group\">\r\n          <Input\r\n            control=\"input\"\r\n            id=\"username\"\r\n            type=\"text\" \r\n            placeholder=\"username\" \r\n            required={true}\r\n            onChange={e => onChangeHanlder(e, setUsername, username.validators)}\r\n            onBlur={e => onBlurHandler(e, setUsername)}\r\n            value={username.value}\r\n            isValid={username.valid}\r\n            isTouched={username.touched}\r\n          />\r\n          <Input \r\n            control=\"input\"\r\n            id=\"password\"\r\n            type=\"password\" \r\n            placeholder=\"password\"\r\n            onChange={e => onChangeHanlder(e, setPassword, password.validators)}\r\n            onBlur={e => onBlurHandler(e, setPassword)}\r\n            required={true}\r\n            value={password.value}\r\n            isValid={password.valid}\r\n            isTouched={password.touched}\r\n          />\r\n          <button \r\n            type=\"submit\" \r\n            className=\"btn\"\r\n            onClick={signUpHandler}\r\n          >SignUp</button>\r\n        </form>\r\n      </main>\r\n    </PageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}