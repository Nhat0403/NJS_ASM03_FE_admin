{"ast":null,"code":"var _jsxFileName = \"D:\\\\funix\\\\NJS301x_1.0-A_VN L\\u1EADp tr\\xECnh Web Back-End v\\u1EDBi NodeJS\\\\assignment 02\\\\Frontend Assignemnt 02 Admin App\\\\src\\\\components\\\\editRoom\\\\EditRoom.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"../../util/axios\";\nimport { useState } from 'react';\nimport { useAPI } from '../../store/APIContext';\nimport Card from '../../UI/card/Card';\nimport Input from '../../UI/input/Input';\nimport NavBar from '../navbar/NavBar';\nimport SideBar from '../sidebar/SideBar';\nimport './EditRoom.css';\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditRoom = () => {\n  _s();\n\n  const location = useLocation();\n  const {\n    rooms,\n    hotels\n  } = useAPI();\n  const [roomId, setRoomId] = useState(location.state.roomId);\n  const room = rooms.filter(i => i._id === location.state.roomId);\n  const [title, setTitle] = useState('');\n  const [isValidTitle, setIsValidTitle] = useState(true);\n  const [description, setDescription] = useState('');\n  const [isValidDescription, setIsValidDescription] = useState(true);\n  const [price, setPrice] = useState('');\n  const [isValidPrice, setIsValidPrice] = useState(true);\n  const [maxPeople, setMaxPeople] = useState('');\n  const [isValidMaxPeople, setIsValidMaxPeople] = useState(true);\n  const [name, setName] = useState('');\n  const [isValidName, setIsValidName] = useState(true);\n  const [hotel, setHotel] = useState('Choose a hotel');\n  const [isValidHotel, setIsValidHotel] = useState(true);\n  const navigate = useNavigate();\n  console.log(room);\n\n  const editRoomHandler = e => {\n    e.preventDefault();\n\n    if (!title) {\n      setIsValidTitle(false);\n    } else {\n      setIsValidTitle(true);\n    }\n\n    ;\n\n    if (!description) {\n      setIsValidDescription(false);\n    } else {\n      setIsValidDescription(true);\n    }\n\n    ;\n\n    if (!price || +price <= 0) {\n      setIsValidPrice(false);\n    } else {\n      setIsValidPrice(true);\n    }\n\n    ;\n\n    if (!maxPeople || +maxPeople <= 0) {\n      setIsValidMaxPeople(false);\n    } else {\n      setIsValidMaxPeople(true);\n    }\n\n    ;\n\n    if (!name // || \n    // name.split(',').map(i => i*1).find(i => isNaN(i)) !== undefined ||\n    // name.split(',').filter((v, i, arr) => arr.indexOf(v) === i).length !== name.length ||\n    // name.split(',').filter(v => v !== \"\").length !== name.length\n    ) {\n      setIsValidName(false);\n    } else {\n      setIsValidName(true);\n    }\n\n    ;\n\n    if (hotel === 'Choose a hotel') {\n      setIsValidHotel(false);\n    } else {\n      setIsValidHotel(true);\n    }\n\n    if (isValidTitle === false || isValidDescription === false || isValidPrice === false || isValidMaxPeople === false || isValidName === false || isValidHotel === false) {\n      return;\n    }\n\n    const editRoom = {\n      title: title.split(' ').map(i => i[0].toUpperCase() + i.substring(1)).join(' '),\n      description: description.split(' ').join(' ').charAt(0).toUpperCase() + description.split(' ').join(' ').slice(1),\n      price: price,\n      maxPeople: maxPeople,\n      name: name.split(',').map(Number),\n      hotel: hotel\n    };\n    axios.post('/room/edit-room', editRoom).then(res => console.log(res)).catch(err => console.log(err));\n    console.log(name.split(',').map(Number));\n    navigate('/room');\n    console.log(isValidName);\n    console.log(\"arRooms \" + (isValidName ? \"\" : \"labelInvalid\")); // console.log(!name);\n    // console.log(name.split(',').map(i => i*1).find(i => isNaN(i)) !== undefined);\n    // console.log(name.split(',').filter((v, i, arr) => arr.indexOf(v) === i).length !== name.split(',').length);\n    // console.log(name.split(',').filter(v => v !== \"\").length !== name.split(',').length);\n    // console.log(name.split(',').map(i => i*1).find(i => isNaN(i)) !== undefined || name.split(',').filter((v, i, arr) => arr.indexOf(v) === i).length !== name.split(',').length || name.split(',').filter(v => v !== \"\").length !== name.split(',').length);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pageContent\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"ahCard\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listTitle ahListTitle\",\n            children: \"edit Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"ahCardForm\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"formControl\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"title\",\n              isValid: isValidTitle,\n              label: \"Title\",\n              type: \"text\",\n              placeholder: \"2 bed room\",\n              value: title,\n              onChange: e => setTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"description\",\n              isValid: isValidDescription,\n              label: \"Description\",\n              type: \"text\",\n              placeholder: \"King size bed, 1 bathroom\",\n              value: description,\n              onChange: e => setDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"price\",\n              isValid: isValidPrice,\n              label: \"Price\",\n              type: \"number\",\n              placeholder: \"100\",\n              value: price,\n              onChange: e => setPrice(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"maxPeople\",\n              isValid: isValidMaxPeople,\n              label: \"Max People\",\n              type: \"number\",\n              placeholder: \"2\",\n              value: maxPeople,\n              onChange: e => setMaxPeople(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputFormControl\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"formLabel \" + (isValidName ? \"\" : \"labelInvalid\"),\n                children: \"Rooms\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"arRooms\",\n                className: \"arRooms \" + (isValidName ? \"\" : \"labelInvalid\"),\n                value: name,\n                onChange: e => setName(e.target.value),\n                rows: \"3\",\n                cols: \"50\" // placeholder=\"Give a comma between room and numbers.\"\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputFormControl\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"formLabel \" + (isValidHotel ? \"\" : \"labelInvalid\"),\n                children: \"Choose a hotel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"arHotel\",\n                id: \"arHotel\",\n                className: \"arHotel \" + (isValidHotel ? \"\" : \"labelInvalid\"),\n                value: hotel,\n                onChange: e => setHotel(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Choose a hotel\",\n                  children: \"Choose a hotel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 17\n                }, this), hotels.map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: i._id,\n                  children: i.name\n                }, i._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btnSend\",\n              onClick: editRoomHandler,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditRoom, \"Z6zKAh0RSbtGtPceQaw+BD6CRCA=\", false, function () {\n  return [useLocation, useAPI, useNavigate];\n});\n\n_c = EditRoom;\nexport default EditRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditRoom\");","map":{"version":3,"sources":["D:/funix/NJS301x_1.0-A_VN Lập trình Web Back-End với NodeJS/assignment 02/Frontend Assignemnt 02 Admin App/src/components/editRoom/EditRoom.jsx"],"names":["axios","useState","useAPI","Card","Input","NavBar","SideBar","useLocation","useNavigate","EditRoom","location","rooms","hotels","roomId","setRoomId","state","room","filter","i","_id","title","setTitle","isValidTitle","setIsValidTitle","description","setDescription","isValidDescription","setIsValidDescription","price","setPrice","isValidPrice","setIsValidPrice","maxPeople","setMaxPeople","isValidMaxPeople","setIsValidMaxPeople","name","setName","isValidName","setIsValidName","hotel","setHotel","isValidHotel","setIsValidHotel","navigate","console","log","editRoomHandler","e","preventDefault","editRoom","split","map","toUpperCase","substring","join","charAt","slice","Number","post","then","res","catch","err","target","value"],"mappings":"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","sourcesContent":["import axios from \"../../util/axios\";\r\nimport { useState } from 'react';\r\nimport { useAPI } from '../../store/APIContext';\r\nimport Card from '../../UI/card/Card';\r\nimport Input from '../../UI/input/Input';\r\nimport NavBar from '../navbar/NavBar';\r\nimport SideBar from '../sidebar/SideBar';\r\nimport './EditRoom.css';\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nconst EditRoom = () => {\r\n  const location = useLocation();\r\n  const { rooms, hotels } = useAPI();\r\n  const [roomId, setRoomId] = useState(location.state.roomId)\r\n  const room = rooms.filter(i => i._id === location.state.roomId);\r\n  \r\n  const [title, setTitle] = useState('');\r\n  const [isValidTitle, setIsValidTitle] = useState(true);\r\n  const [description, setDescription] = useState('');\r\n  const [isValidDescription, setIsValidDescription] = useState(true);\r\n  const [price, setPrice] = useState('');\r\n  const [isValidPrice, setIsValidPrice] = useState(true);\r\n  const [maxPeople, setMaxPeople] = useState('');\r\n  const [isValidMaxPeople, setIsValidMaxPeople] = useState(true);\r\n  const [name, setName] = useState('');\r\n  const [isValidName, setIsValidName] = useState(true);\r\n  const [hotel, setHotel] = useState('Choose a hotel');\r\n  const [isValidHotel, setIsValidHotel] = useState(true);\r\n  \r\n  const navigate = useNavigate();\r\n  \r\n  console.log(room);\r\n\r\n  const editRoomHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(!title) {\r\n      setIsValidTitle(false);\r\n    } else {\r\n      setIsValidTitle(true);\r\n    };\r\n    if(!description) {\r\n      setIsValidDescription(false);\r\n    } else {\r\n      setIsValidDescription(true);\r\n    };\r\n    if(!price || +price <= 0) {\r\n      setIsValidPrice(false);\r\n    } else {\r\n      setIsValidPrice(true);\r\n    };\r\n    if(!maxPeople || +maxPeople <= 0) {\r\n      setIsValidMaxPeople(false);\r\n    } else {\r\n      setIsValidMaxPeople(true);\r\n    };\r\n    if(\r\n      !name \r\n      // || \r\n      // name.split(',').map(i => i*1).find(i => isNaN(i)) !== undefined ||\r\n      // name.split(',').filter((v, i, arr) => arr.indexOf(v) === i).length !== name.length ||\r\n      // name.split(',').filter(v => v !== \"\").length !== name.length\r\n    ) {\r\n      setIsValidName(false);\r\n    } else {\r\n      setIsValidName(true);\r\n    };\r\n    if(hotel === 'Choose a hotel') {\r\n      setIsValidHotel(false);\r\n    } else {\r\n      setIsValidHotel(true);\r\n    }\r\n\r\n    if(\r\n      isValidTitle === false ||\r\n      isValidDescription === false ||\r\n      isValidPrice === false ||\r\n      isValidMaxPeople === false ||\r\n      isValidName === false ||\r\n      isValidHotel === false\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const editRoom = {\r\n      title: title.split(' ').map(i => i[0].toUpperCase() + i.substring(1)).join(' '),\r\n      description: (description.split(' ').join(' ').charAt(0).toUpperCase() + description.split(' ').join(' ').slice(1)),\r\n      price: price,\r\n      maxPeople: maxPeople,\r\n      name: name.split(',').map(Number),\r\n      hotel: hotel\r\n    }\r\n\r\n    axios\r\n      .post('/room/edit-room', editRoom)\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err))\r\n\r\n    console.log(name.split(',').map(Number));\r\n\r\n    navigate('/room');\r\n\r\n    console.log(isValidName);\r\n    console.log(\"arRooms \" + (isValidName ? \"\" : \"labelInvalid\"));\r\n    // console.log(!name);\r\n    // console.log(name.split(',').map(i => i*1).find(i => isNaN(i)) !== undefined);\r\n    // console.log(name.split(',').filter((v, i, arr) => arr.indexOf(v) === i).length !== name.split(',').length);\r\n    // console.log(name.split(',').filter(v => v !== \"\").length !== name.split(',').length);\r\n    // console.log(name.split(',').map(i => i*1).find(i => isNaN(i)) !== undefined || name.split(',').filter((v, i, arr) => arr.indexOf(v) === i).length !== name.split(',').length || name.split(',').filter(v => v !== \"\").length !== name.split(',').length);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n    <SideBar />\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"pageContent\">\r\n        <Card className=\"ahCard\">\r\n          <div className=\"listTitle ahListTitle\">edit Room</div>\r\n        </Card>\r\n        <Card className=\"ahCardForm\">\r\n          <form className=\"formControl\">\r\n            <Input \r\n              id=\"title\"\r\n              isValid={isValidTitle}\r\n              label=\"Title\"\r\n              type=\"text\"\r\n              placeholder=\"2 bed room\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <Input \r\n              id=\"description\"\r\n              isValid={isValidDescription}\r\n              label=\"Description\"\r\n              type=\"text\"\r\n              placeholder=\"King size bed, 1 bathroom\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n            <Input \r\n              id=\"price\"\r\n              isValid={isValidPrice}\r\n              label=\"Price\"\r\n              type=\"number\"\r\n              placeholder=\"100\"\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n            />\r\n            <Input \r\n              id=\"maxPeople\"\r\n              isValid={isValidMaxPeople}\r\n              label=\"Max People\"\r\n              type=\"number\"\r\n              placeholder=\"2\"\r\n              value={maxPeople}\r\n              onChange={(e) => setMaxPeople(e.target.value)}\r\n            />\r\n            <div className=\"inputFormControl\">\r\n              <div \r\n                className={\"formLabel \" + (isValidName ? \"\" : \"labelInvalid\")}\r\n                >Rooms\r\n              </div>\r\n              <textarea \r\n                name=\"arRooms\" \r\n                className={\"arRooms \" + (isValidName ? \"\" : \"labelInvalid\")} \r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                rows=\"3\"\r\n                cols=\"50\"\r\n                // placeholder=\"Give a comma between room and numbers.\"\r\n              />\r\n            </div>\r\n            <div className=\"inputFormControl\">\r\n              <div \r\n                className={\"formLabel \" + (isValidHotel ? \"\" : \"labelInvalid\")}\r\n                >Choose a hotel\r\n              </div>\r\n              <select \r\n                name=\"arHotel\" \r\n                id=\"arHotel\"\r\n                className={\"arHotel \" + (isValidHotel ? \"\" : \"labelInvalid\")} \r\n                value={hotel}\r\n                onChange={(e) => setHotel(e.target.value)}\r\n              >\r\n                <option value=\"Choose a hotel\">Choose a hotel</option>\r\n                {hotels.map(i =>\r\n                  <option \r\n                    key={i._id}\r\n                    value={i._id}\r\n                  >{i.name}</option>\r\n                )}\r\n              </select>\r\n            </div>\r\n            <button \r\n              className=\"btnSend\"\r\n              onClick={editRoomHandler}\r\n            >Send\r\n            </button>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default EditRoom;"]},"metadata":{},"sourceType":"module"}