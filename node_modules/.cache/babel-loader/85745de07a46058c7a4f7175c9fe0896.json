{"ast":null,"code":"var _jsxFileName = \"D:\\\\funix\\\\NJS301x_1.0-A_VN L\\u1EADp tr\\xECnh Web Back-End v\\u1EDBi NodeJS\\\\assignment 03\\\\Frontend Assignemnt 03 Admin App\\\\src\\\\components\\\\chatList\\\\ChatList.jsx\",\n    _s = $RefreshSig$();\n\nimport queryString from 'query-string';\nimport { useEffect, useState } from 'react';\nimport ChatRoomsAPI from '../../API/ChatRoomsAPI';\nimport { onBlurHandler, onChangeHanlder, valid } from '../../util/validators';\nimport Input from '../UI/Input';\nimport './ChatList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatList = () => {\n  _s();\n\n  const [chatSearch, setChatSearch] = useState({\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [valid({\n      type: true\n    })]\n  });\n  const [chatList, setChatList] = useState([]);\n  const cookieId = document.cookie.split('=')[1];\n  console.log(chatSearch.value);\n  useEffect(() => {\n    const fetchData = async () => {\n      const params = {\n        cookieId: cookieId,\n        chatSearch: chatSearch.value\n      };\n      const query = '?' + queryString.stringify(params);\n      const response = await ChatRoomsAPI.searchMessage(query);\n      setChatList(response);\n    };\n\n    fetchData();\n  }, [chatSearch]);\n  console.log(chatSearch.value);\n  console.log(chatList);\n\n  const displayChat = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n      children: \"Apps / Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatInfo flex-column\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatSearch\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            control: \"input\",\n            type: \"search\",\n            id: \"chatSearch\",\n            placeholder: \"Search Contact\",\n            required: true,\n            onChange: e => onChangeHanlder(e, setChatSearch, chatSearch.validators),\n            onBlur: e => onBlurHandler(e, setChatSearch, chatSearch.validators),\n            value: chatSearch.value,\n            isValid: chatSearch.valid,\n            isTouched: chatSearch.touched,\n            className: \"chatListItem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), chatList && chatList.map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex chatListItem\",\n            onClick: displayChat,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"avatar\",\n              src: \"https://img.icons8.com/color/36/000000/administrator-male.png\",\n              alt: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: value._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, value._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatList, \"CyGQiwZGRWOHLMhCzPBtX8qnBww=\");\n\n_c = ChatList;\nexport default ChatList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"sources":["D:/funix/NJS301x_1.0-A_VN Lập trình Web Back-End với NodeJS/assignment 03/Frontend Assignemnt 03 Admin App/src/components/chatList/ChatList.jsx"],"names":["queryString","useEffect","useState","ChatRoomsAPI","onBlurHandler","onChangeHanlder","valid","Input","ChatList","chatSearch","setChatSearch","value","touched","validators","type","chatList","setChatList","cookieId","document","cookie","split","console","log","fetchData","params","query","stringify","response","searchMessage","displayChat","e","preventDefault","map","_id"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,KAAzC,QAAsD,uBAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC;AAC3CS,IAAAA,KAAK,EAAE,EADoC;AAE3CL,IAAAA,KAAK,EAAE,KAFoC;AAG3CM,IAAAA,OAAO,EAAE,KAHkC;AAI3CC,IAAAA,UAAU,EAAE,CAACP,KAAK,CAAC;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAN;AAJ+B,GAAD,CAA5C;AAMA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMe,QAAQ,GAAGC,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAjB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYb,UAAU,CAACE,KAAvB;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,SAAS,GAAG,YAAW;AAC3B,YAAMC,MAAM,GAAG;AACbP,QAAAA,QAAQ,EAAEA,QADG;AAEbR,QAAAA,UAAU,EAAEA,UAAU,CAACE;AAFV,OAAf;AAIA,YAAMc,KAAK,GAAG,MAAMzB,WAAW,CAAC0B,SAAZ,CAAsBF,MAAtB,CAApB;AACA,YAAMG,QAAQ,GAAG,MAAMxB,YAAY,CAACyB,aAAb,CAA2BH,KAA3B,CAAvB;AACAT,MAAAA,WAAW,CAACW,QAAD,CAAX;AACD,KARD;;AASAJ,IAAAA,SAAS;AACV,GAXQ,EAWN,CAACd,UAAD,CAXM,CAAT;AAYAY,EAAAA,OAAO,CAACC,GAAR,CAAYb,UAAU,CAACE,KAAvB;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;;AAEA,QAAMc,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,OAAO,EAAC,OADV;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,EAAE,EAAC,YAHL;AAIE,YAAA,WAAW,EAAC,gBAJd;AAKE,YAAA,QAAQ,EAAE,IALZ;AAME,YAAA,QAAQ,EAAED,CAAC,IAAIzB,eAAe,CAACyB,CAAD,EAAIpB,aAAJ,EAAmBD,UAAU,CAACI,UAA9B,CANhC;AAOE,YAAA,MAAM,EAAEiB,CAAC,IAAI1B,aAAa,CAAC0B,CAAD,EAAIpB,aAAJ,EAAmBD,UAAU,CAACI,UAA9B,CAP5B;AAQE,YAAA,KAAK,EAAEJ,UAAU,CAACE,KARpB;AASE,YAAA,OAAO,EAAEF,UAAU,CAACH,KATtB;AAUE,YAAA,SAAS,EAAEG,UAAU,CAACG,OAVxB;AAWE,YAAA,SAAS,EAAC;AAXZ;AAAA;AAAA;AAAA;AAAA,kBADF,EAcGG,QAAQ,IAAIA,QAAQ,CAACiB,GAAT,CAAarB,KAAK,iBAC7B;AAEE,YAAA,SAAS,EAAC,mBAFZ;AAGE,YAAA,OAAO,EAAEkB,WAHX;AAAA,oCAKE;AACE,cAAA,SAAS,EAAC,QADZ;AAEE,cAAA,GAAG,EAAC,+DAFN;AAGE,cAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,oBALF,eAUE;AAAA,qCACE;AAAA,0BAAIlB,KAAK,CAACsB;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA,aACOtB,KAAK,CAACsB,GADb;AAAA;AAAA;AAAA;AAAA,kBADW,CAdf;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CAxED;;GAAMzB,Q;;KAAAA,Q;AA0EN,eAAeA,QAAf","sourcesContent":["import queryString from 'query-string';\r\nimport { useEffect, useState } from 'react';\r\nimport ChatRoomsAPI from '../../API/ChatRoomsAPI';\r\nimport { onBlurHandler, onChangeHanlder, valid } from '../../util/validators';\r\nimport Input from '../UI/Input';\r\nimport './ChatList.css';\r\n\r\nconst ChatList = () => {\r\n  const [chatSearch, setChatSearch] = useState({\r\n    value: '',\r\n    valid: false,\r\n    touched: false,\r\n    validators: [valid({ type: true })]\r\n  });\r\n  const [chatList, setChatList] = useState([]);\r\n  const cookieId = document.cookie.split('=')[1];\r\n\r\n  console.log(chatSearch.value);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async() => {\r\n      const params = {\r\n        cookieId: cookieId,\r\n        chatSearch: chatSearch.value\r\n      }\r\n      const query = '?' + queryString.stringify(params);\r\n      const response = await ChatRoomsAPI.searchMessage(query);\r\n      setChatList(response);\r\n    }\r\n    fetchData();\r\n  }, [chatSearch])\r\n  console.log(chatSearch.value);\r\n  console.log(chatList);\r\n\r\n  const displayChat = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Chat</h1>\r\n      <em>Apps / Chat</em>\r\n      <div className='bg-white container'>\r\n        <div className=\"chatInfo flex-column\">\r\n          <div className=\"chatSearch\">\r\n            <Input \r\n              control='input'\r\n              type='search'\r\n              id='chatSearch'\r\n              placeholder='Search Contact'\r\n              required={true}\r\n              onChange={e => onChangeHanlder(e, setChatSearch, chatSearch.validators)}\r\n              onBlur={e => onBlurHandler(e, setChatSearch, chatSearch.validators)}\r\n              value={chatSearch.value}\r\n              isValid={chatSearch.valid}\r\n              isTouched={chatSearch.touched}\r\n              className='chatListItem'\r\n            />\r\n            {chatList && chatList.map(value => \r\n              <div \r\n                key={value._id} \r\n                className='flex chatListItem'\r\n                onClick={displayChat}\r\n              >\r\n                <img\r\n                  className='avatar'\r\n                  src='https://img.icons8.com/color/36/000000/administrator-male.png'\r\n                  alt='...'\r\n                />\r\n                <div>\r\n                  <p>{value._id}</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>    \r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ChatList;"]},"metadata":{},"sourceType":"module"}