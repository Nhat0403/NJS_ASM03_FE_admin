{"ast":null,"code":"var _jsxFileName = \"D:\\\\nodejs\\\\Frontend Assignemnt 02 Admin App\\\\src\\\\components\\\\addRoom\\\\AddRoom.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"../../util/axios\";\nimport { useContext, useEffect, useState } from 'react';\nimport './AddRoom.css';\nimport { useNavigate } from \"react-router-dom\";\nimport APIContext from \"../../store/API-context\";\nimport PageContainer from \"../pageContainer/PageContainer\";\nimport Card from \"../UI/Card\";\nimport Input from \"../UI/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddRoom = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [isValidTitle, setIsValidTitle] = useState(true);\n  const [description, setDescription] = useState('');\n  const [isValidDescription, setIsValidDescription] = useState(true);\n  const [price, setPrice] = useState('');\n  const [isValidPrice, setIsValidPrice] = useState(true);\n  const [maxPeople, setMaxPeople] = useState('');\n  const [isValidMaxPeople, setIsValidMaxPeople] = useState(true);\n  const [name, setName] = useState('');\n  const [isValidName, setIsValidName] = useState(true);\n  const [hotel, setHotel] = useState('Choose a hotel');\n  const [isValidHotel, setIsValidHotel] = useState(true);\n  const navigate = useNavigate();\n  const {\n    hotels\n  } = useContext(APIContext); // const { rooms, hotels } = useAPI();\n  // console.log(rooms);\n\n  const addRoomHandler = e => {\n    e.preventDefault();\n\n    if (!title) {\n      setIsValidTitle(false);\n    } else {\n      setIsValidTitle(true);\n    }\n\n    ;\n\n    if (!description) {\n      setIsValidDescription(false);\n    } else {\n      setIsValidDescription(true);\n    }\n\n    ;\n\n    if (!price || +price <= 0) {\n      setIsValidPrice(false);\n    } else {\n      setIsValidPrice(true);\n    }\n\n    ;\n\n    if (!maxPeople || +maxPeople <= 0) {\n      setIsValidMaxPeople(false);\n    } else {\n      setIsValidMaxPeople(true);\n    }\n\n    ;\n\n    if (!name // || \n    // name.split(',').map(i => i*1).find(i => isNaN(i)) !== undefined ||\n    // name.split(',').filter((v, i, arr) => arr.indexOf(v) === i).length !== name.length ||\n    // name.split(',').filter(v => v !== \"\").length !== name.length\n    ) {\n      setIsValidName(false);\n    } else {\n      setIsValidName(true);\n    }\n\n    ;\n\n    if (hotel === 'Choose a hotel') {\n      setIsValidHotel(false);\n    } else {\n      setIsValidHotel(true);\n    }\n\n    if (isValidTitle === false || isValidDescription === false || isValidPrice === false || isValidMaxPeople === false || isValidName === false || isValidHotel === false) {\n      return;\n    }\n\n    const addRoom = {\n      title: title.split(' ').map(i => i[0].toUpperCase() + i.substring(1)).join(' '),\n      description: description.split(' ').join(' ').charAt(0).toUpperCase() + description.split(' ').join(' ').slice(1),\n      price: price,\n      maxPeople: maxPeople,\n      name: name.split(',').map(Number),\n      hotel: hotel\n    };\n    axios.post('/room/add-room', addRoom).then(res => console.log(res)).catch(err => console.log(err));\n    console.log(name.split(',').map(Number));\n    navigate('/room');\n    console.log(isValidName);\n    console.log(\"arRooms \" + (isValidName ? \"\" : \"labelInvalid\")); // console.log(!name);\n    // console.log(name.split(',').map(i => i*1).find(i => isNaN(i)) !== undefined);\n    // console.log(name.split(',').filter((v, i, arr) => arr.indexOf(v) === i).length !== name.split(',').length);\n    // console.log(name.split(',').filter(v => v !== \"\").length !== name.split(',').length);\n    // console.log(name.split(',').map(i => i*1).find(i => isNaN(i)) !== undefined || name.split(',').filter((v, i, arr) => arr.indexOf(v) === i).length !== name.split(',').length || name.split(',').filter(v => v !== \"\").length !== name.split(',').length);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"ahCard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listTitle ahListTitle\",\n        children: \"add new Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"ahCardForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"formControl\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          id: \"title\",\n          isValid: isValidTitle,\n          label: \"Title\",\n          type: \"text\",\n          placeholder: \"2 bed room\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"description\",\n          isValid: isValidDescription,\n          label: \"Description\",\n          type: \"text\",\n          placeholder: \"King size bed, 1 bathroom\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"price\",\n          isValid: isValidPrice,\n          label: \"Price\",\n          type: \"number\",\n          placeholder: \"100\",\n          value: price,\n          onChange: e => setPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"maxPeople\",\n          isValid: isValidMaxPeople,\n          label: \"Max People\",\n          type: \"number\",\n          placeholder: \"2\",\n          value: maxPeople,\n          onChange: e => setMaxPeople(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputFormControl\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formLabel \" + (isValidName ? \"\" : \"labelInvalid\"),\n            children: \"Rooms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"arRooms\",\n            className: \"arRooms \" + (isValidName ? \"\" : \"labelInvalid\"),\n            value: name,\n            onChange: e => setName(e.target.value),\n            rows: \"3\",\n            cols: \"50\" // placeholder=\"Give a comma between room and numbers.\"\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputFormControl\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formLabel \" + (isValidHotel ? \"\" : \"labelInvalid\"),\n            children: \"Choose a hotel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"arHotel\",\n            id: \"arHotel\",\n            className: \"arHotel \" + (isValidHotel ? \"\" : \"labelInvalid\"),\n            value: hotel,\n            onChange: e => setHotel(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Choose a hotel\",\n              children: \"Choose a hotel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), hotels.map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: i._id,\n              children: i.name\n            }, i._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnSend\",\n          onClick: addRoomHandler,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddRoom, \"SC7xJu+KxLdmk2VVCNnh4N9zTdY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AddRoom;\nexport default AddRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRoom\");","map":{"version":3,"sources":["D:/nodejs/Frontend Assignemnt 02 Admin App/src/components/addRoom/AddRoom.jsx"],"names":["axios","useContext","useEffect","useState","useNavigate","APIContext","PageContainer","Card","Input","AddRoom","title","setTitle","isValidTitle","setIsValidTitle","description","setDescription","isValidDescription","setIsValidDescription","price","setPrice","isValidPrice","setIsValidPrice","maxPeople","setMaxPeople","isValidMaxPeople","setIsValidMaxPeople","name","setName","isValidName","setIsValidName","hotel","setHotel","isValidHotel","setIsValidHotel","navigate","hotels","addRoomHandler","e","preventDefault","addRoom","split","map","i","toUpperCase","substring","join","charAt","slice","Number","post","then","res","console","log","catch","err","target","value","_id"],"mappings":"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","sourcesContent":["import axios from \"../../util/axios\";\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport './AddRoom.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport APIContext from \"../../store/API-context\";\r\nimport PageContainer from \"../pageContainer/PageContainer\";\r\nimport Card from \"../UI/Card\";\r\nimport Input from \"../UI/Input\";\r\n\r\nconst AddRoom = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [isValidTitle, setIsValidTitle] = useState(true);\r\n  const [description, setDescription] = useState('');\r\n  const [isValidDescription, setIsValidDescription] = useState(true);\r\n  const [price, setPrice] = useState('');\r\n  const [isValidPrice, setIsValidPrice] = useState(true);\r\n  const [maxPeople, setMaxPeople] = useState('');\r\n  const [isValidMaxPeople, setIsValidMaxPeople] = useState(true);\r\n  const [name, setName] = useState('');\r\n  const [isValidName, setIsValidName] = useState(true);\r\n  const [hotel, setHotel] = useState('Choose a hotel');\r\n  const [isValidHotel, setIsValidHotel] = useState(true);\r\n\r\n  const navigate = useNavigate();\r\n  const { hotels } = useContext(APIContext)\r\n  \r\n  // const { rooms, hotels } = useAPI();\r\n  // console.log(rooms);\r\n\r\n  const addRoomHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(!title) {\r\n      setIsValidTitle(false);\r\n    } else {\r\n      setIsValidTitle(true);\r\n    };\r\n    if(!description) {\r\n      setIsValidDescription(false);\r\n    } else {\r\n      setIsValidDescription(true);\r\n    };\r\n    if(!price || +price <= 0) {\r\n      setIsValidPrice(false);\r\n    } else {\r\n      setIsValidPrice(true);\r\n    };\r\n    if(!maxPeople || +maxPeople <= 0) {\r\n      setIsValidMaxPeople(false);\r\n    } else {\r\n      setIsValidMaxPeople(true);\r\n    };\r\n    if(\r\n      !name \r\n      // || \r\n      // name.split(',').map(i => i*1).find(i => isNaN(i)) !== undefined ||\r\n      // name.split(',').filter((v, i, arr) => arr.indexOf(v) === i).length !== name.length ||\r\n      // name.split(',').filter(v => v !== \"\").length !== name.length\r\n    ) {\r\n      setIsValidName(false);\r\n    } else {\r\n      setIsValidName(true);\r\n    };\r\n    if(hotel === 'Choose a hotel') {\r\n      setIsValidHotel(false);\r\n    } else {\r\n      setIsValidHotel(true);\r\n    }\r\n\r\n    if(\r\n      isValidTitle === false ||\r\n      isValidDescription === false ||\r\n      isValidPrice === false ||\r\n      isValidMaxPeople === false ||\r\n      isValidName === false ||\r\n      isValidHotel === false\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const addRoom = {\r\n      title: title.split(' ').map(i => i[0].toUpperCase() + i.substring(1)).join(' '),\r\n      description: (description.split(' ').join(' ').charAt(0).toUpperCase() + description.split(' ').join(' ').slice(1)),\r\n      price: price,\r\n      maxPeople: maxPeople,\r\n      name: name.split(',').map(Number),\r\n      hotel: hotel\r\n    }\r\n\r\n    axios\r\n      .post('/room/add-room', addRoom)\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err))\r\n\r\n    console.log(name.split(',').map(Number));\r\n\r\n    navigate('/room');\r\n\r\n    console.log(isValidName);\r\n    console.log(\"arRooms \" + (isValidName ? \"\" : \"labelInvalid\"));\r\n    // console.log(!name);\r\n    // console.log(name.split(',').map(i => i*1).find(i => isNaN(i)) !== undefined);\r\n    // console.log(name.split(',').filter((v, i, arr) => arr.indexOf(v) === i).length !== name.split(',').length);\r\n    // console.log(name.split(',').filter(v => v !== \"\").length !== name.split(',').length);\r\n    // console.log(name.split(',').map(i => i*1).find(i => isNaN(i)) !== undefined || name.split(',').filter((v, i, arr) => arr.indexOf(v) === i).length !== name.split(',').length || name.split(',').filter(v => v !== \"\").length !== name.split(',').length);\r\n  }\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Card className=\"ahCard\">\r\n        <div className=\"listTitle ahListTitle\">add new Room</div>\r\n      </Card>\r\n      <Card className=\"ahCardForm\">\r\n        <form className=\"formControl\">\r\n          <Input \r\n            id=\"title\"\r\n            isValid={isValidTitle}\r\n            label=\"Title\"\r\n            type=\"text\"\r\n            placeholder=\"2 bed room\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n          <Input \r\n            id=\"description\"\r\n            isValid={isValidDescription}\r\n            label=\"Description\"\r\n            type=\"text\"\r\n            placeholder=\"King size bed, 1 bathroom\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n          <Input \r\n            id=\"price\"\r\n            isValid={isValidPrice}\r\n            label=\"Price\"\r\n            type=\"number\"\r\n            placeholder=\"100\"\r\n            value={price}\r\n            onChange={(e) => setPrice(e.target.value)}\r\n          />\r\n          <Input \r\n            id=\"maxPeople\"\r\n            isValid={isValidMaxPeople}\r\n            label=\"Max People\"\r\n            type=\"number\"\r\n            placeholder=\"2\"\r\n            value={maxPeople}\r\n            onChange={(e) => setMaxPeople(e.target.value)}\r\n          />\r\n          <div className=\"inputFormControl\">\r\n            <div \r\n              className={\"formLabel \" + (isValidName ? \"\" : \"labelInvalid\")}\r\n              >Rooms\r\n            </div>\r\n            <textarea \r\n              name=\"arRooms\" \r\n              className={\"arRooms \" + (isValidName ? \"\" : \"labelInvalid\")} \r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              rows=\"3\"\r\n              cols=\"50\"\r\n              // placeholder=\"Give a comma between room and numbers.\"\r\n            />\r\n          </div>\r\n          <div className=\"inputFormControl\">\r\n            <div \r\n              className={\"formLabel \" + (isValidHotel ? \"\" : \"labelInvalid\")}\r\n              >Choose a hotel\r\n            </div>\r\n            <select \r\n              name=\"arHotel\" \r\n              id=\"arHotel\"\r\n              className={\"arHotel \" + (isValidHotel ? \"\" : \"labelInvalid\")} \r\n              value={hotel}\r\n              onChange={(e) => setHotel(e.target.value)}\r\n            >\r\n              <option value=\"Choose a hotel\">Choose a hotel</option>\r\n              {hotels.map(i =>\r\n                <option \r\n                  key={i._id}\r\n                  value={i._id}\r\n                >{i.name}</option>\r\n              )}\r\n            </select>\r\n          </div>\r\n          <button \r\n            className=\"btnSend\"\r\n            onClick={addRoomHandler}\r\n          >Send\r\n          </button>\r\n        </form>\r\n      </Card>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default AddRoom;"]},"metadata":{},"sourceType":"module"}