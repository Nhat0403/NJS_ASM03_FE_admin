{"ast":null,"code":"var _jsxFileName = \"D:\\\\funix\\\\NJS301x_1.0-A_VN L\\u1EADp tr\\xECnh Web Back-End v\\u1EDBi NodeJS\\\\assignment 03\\\\Frontend Assignemnt 03 Admin App\\\\src\\\\components\\\\chatList\\\\ChatList.jsx\",\n    _s = $RefreshSig$();\n\nimport queryString from 'query-string';\nimport { useEffect, useState } from 'react';\nimport ChatRoomsAPI from '../../API/ChatRoomsAPI';\nimport { onBlurHandler, onChangeHanlder, valid, validRequire } from '../../util/validators';\nimport Input from '../UI/Input';\nimport './ChatList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatList = () => {\n  _s();\n\n  const [chatSearch, setChatSearch] = useState({\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [valid({\n      type: true\n    })]\n  });\n  const [textMessage, setTextMessage] = useState({\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [validRequire]\n  });\n  const [chatList, setChatList] = useState([]);\n  const [message, setMessage] = useState([]);\n  const [roomId, setRoomId] = useState('');\n  const [load, setLoad] = useState(false);\n  const cookieId = document.cookie.split('=')[1];\n  console.log(chatSearch.value);\n  useEffect(() => {\n    const fetchData = async () => {\n      const params = {\n        cookieId: cookieId,\n        chatSearch: chatSearch.value\n      };\n      const query = '?' + queryString.stringify(params);\n      const response = await ChatRoomsAPI.searchMessage(query);\n      setChatList(response);\n    };\n\n    fetchData();\n  }, [chatSearch]);\n  console.log(chatSearch.value);\n  console.log(chatList);\n\n  const onChat = e => {\n    e.preventDefault();\n    setRoomId(e.target.id);\n    console.log(e.target.id);\n    ChatRoomsAPI.getMessageByRoomId(roomId).then(res => setMessage(res.content));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n      children: \"Apps / Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatInfo flex-column\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatSearch\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            control: \"input\",\n            type: \"search\",\n            id: \"chatSearch\",\n            placeholder: \"Search Contact\",\n            required: true,\n            onChange: e => onChangeHanlder(e, setChatSearch, chatSearch.validators),\n            onBlur: e => onBlurHandler(e, setChatSearch, chatSearch.validators),\n            value: chatSearch.value,\n            isValid: chatSearch.valid,\n            isTouched: chatSearch.touched,\n            className: \"chatListItem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), chatList && chatList.map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex chatListItem\",\n            onClick: onChat,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"avatar\",\n              src: \"https://img.icons8.com/color/36/000000/administrator-male.png\",\n              alt: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: value._id.toString(),\n              children: value._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, value._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMedia\",\n          children: message && message.map(value => value.is_admin ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media media-chat\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-body\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"You: \", value.message]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this)\n          }, value._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media media-chat media-chat-reverse\",\n            children: [' ', /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"avatar\",\n              src: \"https://img.icons8.com/color/36/000000/administrator-male.png\",\n              alt: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-body\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Client: \", value.message]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this)\n            }, value.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)]\n          }, value._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatField\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatFieldConatiner flex\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              control: \"input\",\n              type: \"text\",\n              id: \"textMessage\",\n              placeholder: \"Type and enter\",\n              required: true,\n              onChange: e => onChangeHanlder(e, setTextMessage, textMessage.validators),\n              onBlur: e => onBlurHandler(e, setTextMessage, textMessage.validators),\n              value: textMessage.value,\n              isValid: textMessage.valid,\n              isTouched: textMessage.touched,\n              className: \"chatListItem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://icons8.com/icon/12628/paper-plane\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatList, \"Ux9oasedJ3uurkzXIz3LH+I32hM=\");\n\n_c = ChatList;\nexport default ChatList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"sources":["D:/funix/NJS301x_1.0-A_VN Lập trình Web Back-End với NodeJS/assignment 03/Frontend Assignemnt 03 Admin App/src/components/chatList/ChatList.jsx"],"names":["queryString","useEffect","useState","ChatRoomsAPI","onBlurHandler","onChangeHanlder","valid","validRequire","Input","ChatList","chatSearch","setChatSearch","value","touched","validators","type","textMessage","setTextMessage","chatList","setChatList","message","setMessage","roomId","setRoomId","load","setLoad","cookieId","document","cookie","split","console","log","fetchData","params","query","stringify","response","searchMessage","onChat","e","preventDefault","target","id","getMessageByRoomId","then","res","content","map","_id","toString","is_admin"],"mappings":"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","sourcesContent":["import queryString from 'query-string';\r\nimport { useEffect, useState } from 'react';\r\nimport ChatRoomsAPI from '../../API/ChatRoomsAPI';\r\nimport { onBlurHandler, onChangeHanlder, valid, validRequire } from '../../util/validators';\r\nimport Input from '../UI/Input';\r\nimport './ChatList.css';\r\n\r\nconst ChatList = () => {\r\n  const [chatSearch, setChatSearch] = useState({\r\n    value: '',\r\n    valid: false,\r\n    touched: false,\r\n    validators: [valid({ type: true })]\r\n  });\r\n  const [textMessage, setTextMessage] = useState({\r\n    value: '',\r\n    valid: false,\r\n    touched: false,\r\n    validators: [validRequire]\r\n  });\r\n  const [chatList, setChatList] = useState([]);\r\n  const [message, setMessage] = useState([]);\r\n  const [roomId, setRoomId] = useState('');\r\n  const [load, setLoad] = useState(false);\r\n  const cookieId = document.cookie.split('=')[1];\r\n\r\n  console.log(chatSearch.value);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async() => {\r\n      const params = {\r\n        cookieId: cookieId,\r\n        chatSearch: chatSearch.value\r\n      }\r\n      const query = '?' + queryString.stringify(params);\r\n      const response = await ChatRoomsAPI.searchMessage(query);\r\n      setChatList(response);\r\n    }\r\n    fetchData();\r\n  }, [chatSearch])\r\n  console.log(chatSearch.value);\r\n  console.log(chatList);\r\n  \r\n  const onChat = (e) => {\r\n    e.preventDefault();\r\n    setRoomId(e.target.id);\r\n    console.log(e.target.id);\r\n    ChatRoomsAPI.getMessageByRoomId(roomId)\r\n      .then(res => setMessage(res.content))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Chat</h1>\r\n      <em>Apps / Chat</em>\r\n      <div className='bg-white container'>\r\n        <div className=\"chatInfo flex-column\">\r\n          <div className=\"chatSearch\">\r\n            <Input \r\n              control='input'\r\n              type='search'\r\n              id='chatSearch'\r\n              placeholder='Search Contact'\r\n              required={true}\r\n              onChange={e => onChangeHanlder(e, setChatSearch, chatSearch.validators)}\r\n              onBlur={e => onBlurHandler(e, setChatSearch, chatSearch.validators)}\r\n              value={chatSearch.value}\r\n              isValid={chatSearch.valid}\r\n              isTouched={chatSearch.touched}\r\n              className='chatListItem'\r\n            />\r\n            {chatList && chatList.map(value => \r\n              <div \r\n                key={value._id} \r\n                className='flex chatListItem'\r\n                onClick={onChat}\r\n              >\r\n                <img\r\n                  className='avatar'\r\n                  src='https://img.icons8.com/color/36/000000/administrator-male.png'\r\n                  alt='...'\r\n                />\r\n                <div id={value._id.toString()}>{value._id}</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"chatBox\">\r\n          <div className=\"chatMedia\">\r\n            {message && message.map(value =>\r\n              value.is_admin ? (\r\n                <div\r\n                  className='media media-chat'\r\n                  key={value._id}>\r\n                  <div className='media-body'>\r\n                    <p>You: {value.message}</p>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className='media media-chat media-chat-reverse'\r\n                  key={value._id}>\r\n                  {' '}\r\n                  <img\r\n                    className='avatar'\r\n                    src='https://img.icons8.com/color/36/000000/administrator-male.png'\r\n                    alt='...'\r\n                  />\r\n                  <div className='media-body' key={value.id}>\r\n                    <p>Client: {value.message}</p>\r\n                  </div>\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n          <div className=\"chatField\">\r\n            <div className=\"chatFieldConatiner flex\">\r\n              <Input \r\n                control='input'\r\n                type='text'\r\n                id='textMessage'\r\n                placeholder='Type and enter'\r\n                required={true}\r\n                onChange={e => onChangeHanlder(e, setTextMessage, textMessage.validators)}\r\n                onBlur={e => onBlurHandler(e, setTextMessage, textMessage.validators)}\r\n                value={textMessage.value}\r\n                isValid={textMessage.valid}\r\n                isTouched={textMessage.touched}\r\n                className='chatListItem'\r\n              />\r\n              <img src='https://icons8.com/icon/12628/paper-plane'/>\r\n            </div>\r\n          </div>\r\n        </div>   \r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ChatList;"]},"metadata":{},"sourceType":"module"}