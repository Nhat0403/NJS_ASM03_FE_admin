{"ast":null,"code":"var _jsxFileName = \"D:\\\\funix\\\\NJS301x_1.0-A_VN L\\u1EADp tr\\xECnh Web Back-End v\\u1EDBi NodeJS\\\\assignment 03\\\\Frontend Assignemnt 03 Admin App\\\\src\\\\components\\\\auth\\\\SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"../../util/axios\";\nimport { useContext, useState } from \"react\";\nimport './auth.css';\nimport { useDispatch } from \"react-redux\";\nimport { authActions } from \"../hook/auth\";\nimport { currentUser, saveToStorage, setTouched } from \"../hook/lib\";\nimport { useNavigate } from \"react-router-dom\";\nimport Input from \"../UI/Input\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport { onBlurHandler, onChangeHanlder, validLength, validRequire } from \"../../util/validators\";\nimport PageContainer from \"../pageContainer/PageContainer\";\nimport queryString from \"query-string\";\nimport UserAPI from \"../../API/UserAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = pros => {\n  _s();\n\n  const [username, setUsername] = useState({\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [validLength({\n      min: 4\n    }), validRequire]\n  });\n  const [password, setPassword] = useState({\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [validLength({\n      min: 4\n    }), validRequire]\n  });\n  const [error, setError] = useState(); // const { users } = useAPI();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const signUpHandler = e => {\n    e.preventDefault();\n    setTouched(setUsername);\n    setTouched(setPassword);\n\n    if (!username.valid || !password.valid) {\n      return setError({\n        title: 'Validation failed!',\n        message: 'Invalid username or password!'\n      });\n    }\n\n    if (username.valid && password.valid) {\n      const params = {\n        username: username.value,\n        password: password.value,\n        fullname: fullname.value,\n        phone: phone.value\n      };\n      const query = '?' + queryString.stringify(params);\n      UserAPI.postSignUp(query).then(res => {\n        if (res.status === 200 || res.status === 201) {\n          // console.log(res);\n          dispatch(authActions.login());\n\n          while (currentUser.length > 0) {\n            currentUser.pop();\n          }\n\n          ;\n          currentUser.push(res.data);\n          saveToStorage('currentUser', currentUser);\n          navigate('/home');\n        }\n      }).catch(err => {\n        if (err.response.status) {\n          setError({\n            title: 'Validation failed!',\n            message: err.response.data.message\n          });\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onConfirm: () => setError(null),\n      error: !!error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"centered\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"SignUp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            control: \"input\",\n            id: \"username\",\n            type: \"text\",\n            placeholder: \"username\",\n            required: true,\n            onChange: e => onChangeHanlder(e, setUsername, username.validators),\n            onBlur: e => onBlurHandler(e, setUsername, username.validators),\n            value: username.value,\n            isValid: username.valid,\n            isTouched: username.touched\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            control: \"input\",\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"password\",\n            onChange: e => onChangeHanlder(e, setPassword, password.validators),\n            onBlur: e => onBlurHandler(e, setPassword, password.validators),\n            required: true,\n            value: password.value,\n            isValid: password.valid,\n            isTouched: password.touched\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn\",\n            onClick: signUpHandler,\n            children: \"SignUp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SignUp, \"IFTwfdSwjeBEIFg25UwViFq9g0Y=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/funix/NJS301x_1.0-A_VN Lập trình Web Back-End với NodeJS/assignment 03/Frontend Assignemnt 03 Admin App/src/components/auth/SignUp.jsx"],"names":["axios","useContext","useState","useDispatch","authActions","currentUser","saveToStorage","setTouched","useNavigate","Input","ErrorModal","onBlurHandler","onChangeHanlder","validLength","validRequire","PageContainer","queryString","UserAPI","SignUp","pros","username","setUsername","value","valid","touched","validators","min","password","setPassword","error","setError","dispatch","navigate","signUpHandler","e","preventDefault","title","message","params","fullname","phone","query","stringify","postSignUp","then","res","status","login","length","pop","push","data","catch","err","response"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAO,YAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,UAArC,QAAuD,aAAvD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,WAAzC,EAAsDC,YAAtD,QAA0E,uBAA1E;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;;AAEA,MAAMC,MAAM,GAAIC,IAAD,IAAU;AAAA;;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC;AACvCoB,IAAAA,KAAK,EAAE,EADgC;AAEvCC,IAAAA,KAAK,EAAE,KAFgC;AAGvCC,IAAAA,OAAO,EAAE,KAH8B;AAIvCC,IAAAA,UAAU,EAAE,CAACZ,WAAW,CAAC;AAAEa,MAAAA,GAAG,EAAE;AAAP,KAAD,CAAZ,EAA0BZ,YAA1B;AAJ2B,GAAD,CAAxC;AAMA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,CAAC;AACvCoB,IAAAA,KAAK,EAAE,EADgC;AAEvCC,IAAAA,KAAK,EAAE,KAFgC;AAGvCC,IAAAA,OAAO,EAAE,KAH8B;AAIvCC,IAAAA,UAAU,EAAE,CAACZ,WAAW,CAAC;AAAEa,MAAAA,GAAG,EAAE;AAAP,KAAD,CAAZ,EAA0BZ,YAA1B;AAJ2B,GAAD,CAAxC;AAMA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoB5B,QAAQ,EAAlC,CAbuB,CAevB;;AACA,QAAM6B,QAAQ,GAAG5B,WAAW,EAA5B;AACA,QAAM6B,QAAQ,GAAGxB,WAAW,EAA5B;;AAGA,QAAMyB,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AAEA5B,IAAAA,UAAU,CAACc,WAAD,CAAV;AACAd,IAAAA,UAAU,CAACqB,WAAD,CAAV;;AAEA,QAAG,CAACR,QAAQ,CAACG,KAAV,IAAmB,CAACI,QAAQ,CAACJ,KAAhC,EAAuC;AACrC,aAAOO,QAAQ,CAAC;AACdM,QAAAA,KAAK,EAAE,oBADO;AAEdC,QAAAA,OAAO,EAAE;AAFK,OAAD,CAAf;AAID;;AAED,QAAGjB,QAAQ,CAACG,KAAT,IAAkBI,QAAQ,CAACJ,KAA9B,EAAqC;AACnC,YAAMe,MAAM,GAAG;AACblB,QAAAA,QAAQ,EAAEA,QAAQ,CAACE,KADN;AAEbK,QAAAA,QAAQ,EAAEA,QAAQ,CAACL,KAFN;AAGbiB,QAAAA,QAAQ,EAAEA,QAAQ,CAACjB,KAHN;AAIbkB,QAAAA,KAAK,EAAEA,KAAK,CAAClB;AAJA,OAAf;AAMA,YAAMmB,KAAK,GAAG,MAAMzB,WAAW,CAAC0B,SAAZ,CAAsBJ,MAAtB,CAApB;AAEArB,MAAAA,OAAO,CAAC0B,UAAR,CAAmBF,KAAnB,EACGG,IADH,CACQC,GAAG,IAAI;AACX,YAAGA,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBD,GAAG,CAACC,MAAJ,KAAe,GAAxC,EAA6C;AAC3C;AACAf,UAAAA,QAAQ,CAAC3B,WAAW,CAAC2C,KAAZ,EAAD,CAAR;;AACA,iBAAM1C,WAAW,CAAC2C,MAAZ,GAAqB,CAA3B,EAA8B;AAC5B3C,YAAAA,WAAW,CAAC4C,GAAZ;AACD;;AAAA;AACD5C,UAAAA,WAAW,CAAC6C,IAAZ,CAAiBL,GAAG,CAACM,IAArB;AACA7C,UAAAA,aAAa,CAAC,aAAD,EAAgBD,WAAhB,CAAb;AACA2B,UAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF,OAZH,EAaGoB,KAbH,CAaSC,GAAG,IAAI;AACZ,YAAGA,GAAG,CAACC,QAAJ,CAAaR,MAAhB,EAAwB;AACtBhB,UAAAA,QAAQ,CAAC;AACPM,YAAAA,KAAK,EAAE,oBADA;AAEPC,YAAAA,OAAO,EAAEgB,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBd;AAFpB,WAAD,CAAR;AAID;AACF,OApBH;AAqBD;AACF,GA5CD;;AA8CA,sBACE;AAAA,eACGR,KAAK,iBACJ,QAAC,UAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACO,KADf;AAEE,MAAA,OAAO,EAAEP,KAAK,CAACQ,OAFjB;AAGE,MAAA,SAAS,EAAE,MAAMP,QAAQ,CAAC,IAAD,CAH3B;AAIE,MAAA,KAAK,EAAE,CAAC,CAACD;AAJX;AAAA;AAAA;AAAA;AAAA,YAFJ,eASE,QAAC,aAAD;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,OAAO,EAAC,OADV;AAEE,YAAA,EAAE,EAAC,UAFL;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,WAAW,EAAC,UAJd;AAKE,YAAA,QAAQ,EAAE,IALZ;AAME,YAAA,QAAQ,EAAEK,CAAC,IAAItB,eAAe,CAACsB,CAAD,EAAIb,WAAJ,EAAiBD,QAAQ,CAACK,UAA1B,CANhC;AAOE,YAAA,MAAM,EAAES,CAAC,IAAIvB,aAAa,CAACuB,CAAD,EAAIb,WAAJ,EAAiBD,QAAQ,CAACK,UAA1B,CAP5B;AAQE,YAAA,KAAK,EAAEL,QAAQ,CAACE,KARlB;AASE,YAAA,OAAO,EAAEF,QAAQ,CAACG,KATpB;AAUE,YAAA,SAAS,EAAEH,QAAQ,CAACI;AAVtB;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE,QAAC,KAAD;AACE,YAAA,OAAO,EAAC,OADV;AAEE,YAAA,EAAE,EAAC,UAFL;AAGE,YAAA,IAAI,EAAC,UAHP;AAIE,YAAA,WAAW,EAAC,UAJd;AAKE,YAAA,QAAQ,EAAEU,CAAC,IAAItB,eAAe,CAACsB,CAAD,EAAIN,WAAJ,EAAiBD,QAAQ,CAACF,UAA1B,CALhC;AAME,YAAA,MAAM,EAAES,CAAC,IAAIvB,aAAa,CAACuB,CAAD,EAAIN,WAAJ,EAAiBD,QAAQ,CAACF,UAA1B,CAN5B;AAOE,YAAA,QAAQ,EAAE,IAPZ;AAQE,YAAA,KAAK,EAAEE,QAAQ,CAACL,KARlB;AASE,YAAA,OAAO,EAAEK,QAAQ,CAACJ,KATpB;AAUE,YAAA,SAAS,EAAEI,QAAQ,CAACH;AAVtB;AAAA;AAAA;AAAA;AAAA,kBAbF,eAyBE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,KAFZ;AAGE,YAAA,OAAO,EAAES,aAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAgDD,CAlHD;;GAAMf,M;UAgBaf,W,EACAK,W;;;KAjBbU,M;AAoHN,eAAeA,MAAf","sourcesContent":["import axios from \"../../util/axios\";\r\nimport { useContext, useState } from \"react\";\r\nimport './auth.css'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authActions } from \"../hook/auth\";\r\nimport { currentUser, saveToStorage, setTouched } from \"../hook/lib\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Input from \"../UI/Input\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\nimport { onBlurHandler, onChangeHanlder, validLength, validRequire } from \"../../util/validators\";\r\nimport PageContainer from \"../pageContainer/PageContainer\";\r\nimport queryString from \"query-string\";\r\nimport UserAPI from \"../../API/UserAPI\";\r\n\r\nconst SignUp = (pros) => {\r\n  const [username, setUsername] = useState({\r\n    value: '',\r\n    valid: false,\r\n    touched: false,\r\n    validators: [validLength({ min: 4 }), validRequire]\r\n  });\r\n  const [password, setPassword] = useState({\r\n    value: '',\r\n    valid: false,\r\n    touched: false,\r\n    validators: [validLength({ min: 4 }), validRequire]\r\n  });\r\n  const [error, setError] = useState();\r\n\r\n  // const { users } = useAPI();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const signUpHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    setTouched(setUsername);\r\n    setTouched(setPassword);\r\n\r\n    if(!username.valid || !password.valid) {\r\n      return setError({\r\n        title: 'Validation failed!',\r\n        message: 'Invalid username or password!'\r\n      })\r\n    }\r\n\r\n    if(username.valid && password.valid) {\r\n      const params = {\r\n        username: username.value,\r\n        password: password.value,\r\n        fullname: fullname.value,\r\n        phone: phone.value\r\n      };\r\n      const query = '?' + queryString.stringify(params);\r\n\r\n      UserAPI.postSignUp(query)\r\n        .then(res => {\r\n          if(res.status === 200 || res.status === 201) {\r\n            // console.log(res);\r\n            dispatch(authActions.login());\r\n            while(currentUser.length > 0) {\r\n              currentUser.pop();\r\n            };\r\n            currentUser.push(res.data);\r\n            saveToStorage('currentUser', currentUser);\r\n            navigate('/home');\r\n          }\r\n        })\r\n        .catch(err => {\r\n          if(err.response.status) {\r\n            setError({\r\n              title: 'Validation failed!',\r\n              message: err.response.data.message\r\n            })\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && (\r\n        <ErrorModal \r\n          title={error.title}\r\n          message={error.message}\r\n          onConfirm={() => setError(null)}\r\n          error={!!error}\r\n        />\r\n      )}\r\n      <PageContainer>\r\n        <main className=\"centered\">\r\n          <h1>SignUp</h1>\r\n          <form className=\"form-group\">\r\n            <Input\r\n              control=\"input\"\r\n              id=\"username\"\r\n              type=\"text\" \r\n              placeholder=\"username\" \r\n              required={true}\r\n              onChange={e => onChangeHanlder(e, setUsername, username.validators)}\r\n              onBlur={e => onBlurHandler(e, setUsername, username.validators)}\r\n              value={username.value}\r\n              isValid={username.valid}\r\n              isTouched={username.touched}\r\n            />\r\n            <Input \r\n              control=\"input\"\r\n              id=\"password\"\r\n              type=\"password\" \r\n              placeholder=\"password\"\r\n              onChange={e => onChangeHanlder(e, setPassword, password.validators)}\r\n              onBlur={e => onBlurHandler(e, setPassword, password.validators)}\r\n              required={true}\r\n              value={password.value}\r\n              isValid={password.valid}\r\n              isTouched={password.touched}\r\n            />\r\n            <button \r\n              type=\"submit\" \r\n              className=\"btn\"\r\n              onClick={signUpHandler}\r\n            >SignUp</button>\r\n          </form>\r\n        </main>\r\n      </PageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}