{"ast":null,"code":"var _jsxFileName = \"D:\\\\funix\\\\NJS301x_1.0-A_VN L\\u1EADp tr\\xECnh Web Back-End v\\u1EDBi NodeJS\\\\assignment 02\\\\Frontend Assignemnt 02 Admin App\\\\src\\\\components\\\\addRoom\\\\AddRoom.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"../../util/axios\";\nimport { useState } from 'react';\nimport { useAPI } from '../../store/APIContext';\nimport Card from '../../UI/card/Card';\nimport Input from '../../UI/input/Input';\nimport NavBar from '../navbar/NavBar';\nimport SideBar from '../sidebar/SideBar';\nimport './AddRoom.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddRoom = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [isValidName, setIsValidName] = useState(true);\n  const [type, setType] = useState('');\n  const [isValidType, setIsValidType] = useState(true);\n  const [city, setCity] = useState('');\n  const [isValidCity, setIsValidCity] = useState(true);\n  const [address, setAddress] = useState('');\n  const [isValidAddress, setIsValidAddress] = useState(true);\n  const [distance, setDistance] = useState('');\n  const [isValidDistance, setIsValidDistance] = useState(true);\n  const [title, setTitle] = useState('');\n  const [isValidTitle, setIsValidTitle] = useState(true);\n  const [description, setDescription] = useState('');\n  const [isValidDescription, setIsValidDescription] = useState(true);\n  const [price, setPrice] = useState('');\n  const [isValidPrice, setIsValidPrice] = useState(true);\n  const [images, setImages] = useState('');\n  const [isValidImages, setIsValidImages] = useState(true);\n  const [featured, setFeatured] = useState(false);\n  const [isValidRoomRooms, setIsValidRoomRooms] = useState(true);\n  const [selectedRoomRooms, setSelectedRoomRooms] = useState([]);\n  const navigate = useNavigate();\n  const {\n    rooms\n  } = useAPI(); // console.log(rooms);\n\n  const RoomRoomsSelectHandler = e => {\n    const updatedOptions = [...e.target.options].filter(option => option.selected).map(x => x.value); // console.log('updatedOptions', updatedOptions);\n\n    setSelectedRoomRooms(updatedOptions);\n  };\n\n  const addRoomHandler = e => {\n    e.preventDefault();\n\n    if (!name) {\n      setIsValidName(false);\n    } else {\n      setIsValidName(true);\n    }\n\n    ;\n\n    if (!type) {\n      setIsValidType(false);\n    } else {\n      setIsValidType(true);\n    }\n\n    ;\n\n    if (!city) {\n      setIsValidCity(false);\n    } else {\n      setIsValidCity(true);\n    }\n\n    ;\n\n    if (!address) {\n      setIsValidAddress(false);\n    } else {\n      setIsValidAddress(true);\n    }\n\n    ;\n\n    if (!distance || +distance < 0) {\n      setIsValidDistance(false);\n    } else {\n      setIsValidDistance(true);\n    }\n\n    ;\n\n    if (!title) {\n      setIsValidTitle(false);\n    } else {\n      setIsValidTitle(true);\n    }\n\n    ;\n\n    if (!description) {\n      setIsValidDescription(false);\n    } else {\n      setIsValidDescription(true);\n    }\n\n    ;\n\n    if (!price || +price <= 0) {\n      setIsValidPrice(false);\n    } else {\n      setIsValidPrice(true);\n    }\n\n    ;\n\n    if (!images) {\n      setIsValidImages(false);\n    } else {\n      setIsValidImages(true);\n    }\n\n    ;\n\n    if (selectedRoomRooms.length === 0) {\n      setIsValidRoomRooms(false);\n    } else {\n      setIsValidRoomRooms(true);\n    }\n\n    ;\n\n    if (isValidName === false || isValidType === false || isValidCity === false || isValidAddress === false || isValidDistance === false || isValidTitle === false || isValidDescription === false || isValidPrice === false || isValidImages === false || isValidRoomRooms === false) {\n      return;\n    }\n\n    const addRoom = {\n      name: name,\n      type: type,\n      city: city.split(' ').map(i => i[0].toUpperCase() + i.substring(1)).join(' '),\n      address: address,\n      distance: distance,\n      title: title,\n      description: description,\n      price: price,\n      images: images.split('\\n').join(','),\n      featured: featured,\n      rooms: selectedRoomRooms\n    };\n    axios.post('/Room/add-Room', addRoom).then(res => console.log(res)).catch(err => console.log(err));\n    navigate('/Room');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pageContent\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"ahCard\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listTitle ahListTitle\",\n            children: \"add new Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"ahCardForm\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"formControl\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"title\",\n              isValid: isValidTitle,\n              label: \"Title\",\n              type: \"text\",\n              placeholder: \"The best Room\",\n              value: title,\n              onChange: e => setTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"description\",\n              isValid: isValidDescription,\n              label: \"Description\",\n              type: \"text\",\n              placeholder: \"description\",\n              value: description,\n              onChange: e => setDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"price\",\n              isValid: isValidPrice,\n              label: \"Price\",\n              type: \"number\",\n              placeholder: \"100\",\n              value: price,\n              onChange: e => setPrice(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputFormControl\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"formLabel \" + (isValidImages ? \"\" : \"labelInvalid\"),\n                children: \"Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"ahImages\",\n                className: \"ahImages \" + (isValidImages ? \"\" : \"labelInvalid\"),\n                value: images,\n                onChange: e => setImages(e.target.value),\n                rows: \"3\",\n                cols: \"50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputFormControl\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"formLabel \",\n                children: \"Featured\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"ahFeatured\",\n                id: \"ahFeatured\",\n                className: \"ahFeatured \",\n                value: featured,\n                onChange: e => setFeatured(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: false,\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: true,\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputFormControl ahRoomRooms\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"formLabel \" + (isValidRoomRooms ? \"\" : \"labelInvalid\"),\n                children: \"Rooms (multiple select: ctrl + click)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"ahRoomRooms\",\n                id: \"ahFeatured\",\n                className: \"ahRoomRooms \" + (isValidRoomRooms ? \"\" : \"labelInvalid\"),\n                value: selectedRoomRooms,\n                onChange: RoomRoomsSelectHandler,\n                multiple: true,\n                children: rooms.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: r._id,\n                  children: r.desc\n                }, r._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btnSend\",\n              onClick: addRoomHandler,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddRoom, \"QFvM29+GMyTylgAtNwLkEmL8WMo=\", false, function () {\n  return [useNavigate, useAPI];\n});\n\n_c = AddRoom;\nexport default AddRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRoom\");","map":{"version":3,"sources":["D:/funix/NJS301x_1.0-A_VN Lập trình Web Back-End với NodeJS/assignment 02/Frontend Assignemnt 02 Admin App/src/components/addRoom/AddRoom.jsx"],"names":["axios","useState","useAPI","Card","Input","NavBar","SideBar","useNavigate","AddRoom","name","setName","isValidName","setIsValidName","type","setType","isValidType","setIsValidType","city","setCity","isValidCity","setIsValidCity","address","setAddress","isValidAddress","setIsValidAddress","distance","setDistance","isValidDistance","setIsValidDistance","title","setTitle","isValidTitle","setIsValidTitle","description","setDescription","isValidDescription","setIsValidDescription","price","setPrice","isValidPrice","setIsValidPrice","images","setImages","isValidImages","setIsValidImages","featured","setFeatured","isValidRoomRooms","setIsValidRoomRooms","selectedRoomRooms","setSelectedRoomRooms","navigate","rooms","RoomRoomsSelectHandler","e","updatedOptions","target","options","filter","option","selected","map","x","value","addRoomHandler","preventDefault","length","addRoom","split","i","toUpperCase","substring","join","post","then","res","console","log","catch","err","r","_id","desc"],"mappings":"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","sourcesContent":["import axios from \"../../util/axios\";\r\nimport { useState } from 'react';\r\nimport { useAPI } from '../../store/APIContext';\r\nimport Card from '../../UI/card/Card';\r\nimport Input from '../../UI/input/Input';\r\nimport NavBar from '../navbar/NavBar';\r\nimport SideBar from '../sidebar/SideBar';\r\nimport './AddRoom.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AddRoom = () => {\r\n  const [name, setName] = useState('');\r\n  const [isValidName, setIsValidName] = useState(true);\r\n  const [type, setType] = useState('');\r\n  const [isValidType, setIsValidType] = useState(true);\r\n  const [city, setCity] = useState('');\r\n  const [isValidCity, setIsValidCity] = useState(true);\r\n  const [address, setAddress] = useState('');\r\n  const [isValidAddress, setIsValidAddress] = useState(true);\r\n  const [distance, setDistance] = useState('');\r\n  const [isValidDistance, setIsValidDistance] = useState(true);\r\n  const [title, setTitle] = useState('');\r\n  const [isValidTitle, setIsValidTitle] = useState(true);\r\n  const [description, setDescription] = useState('');\r\n  const [isValidDescription, setIsValidDescription] = useState(true);\r\n  const [price, setPrice] = useState('');\r\n  const [isValidPrice, setIsValidPrice] = useState(true);\r\n  const [images, setImages] = useState('');\r\n  const [isValidImages, setIsValidImages] = useState(true);\r\n  const [featured, setFeatured] = useState(false);\r\n  const [isValidRoomRooms, setIsValidRoomRooms] = useState(true);\r\n  const [selectedRoomRooms, setSelectedRoomRooms] = useState([]);\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  const { rooms } = useAPI();\r\n  // console.log(rooms);\r\n\r\n  const RoomRoomsSelectHandler = (e) => {\r\n    const updatedOptions = [...e.target.options]\r\n      .filter(option => option.selected)\r\n      .map(x => x.value);\r\n    // console.log('updatedOptions', updatedOptions);\r\n    setSelectedRoomRooms(updatedOptions);\r\n  }\r\n\r\n  const addRoomHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(!name) {\r\n      setIsValidName(false);\r\n    } else {\r\n      setIsValidName(true);\r\n    };\r\n    if(!type) {\r\n      setIsValidType(false);\r\n    } else {\r\n      setIsValidType(true);\r\n    };\r\n    if(!city) {\r\n      setIsValidCity(false);\r\n    } else {\r\n      setIsValidCity(true);\r\n    };\r\n    if(!address) {\r\n      setIsValidAddress(false);\r\n    } else {\r\n      setIsValidAddress(true);\r\n    };\r\n    if(!distance || +distance < 0) {\r\n      setIsValidDistance(false);\r\n    } else {\r\n      setIsValidDistance(true);\r\n    };\r\n    if(!title) {\r\n      setIsValidTitle(false);\r\n    } else {\r\n      setIsValidTitle(true);\r\n    };\r\n    if(!description) {\r\n      setIsValidDescription(false);\r\n    } else {\r\n      setIsValidDescription(true);\r\n    };\r\n    if(!price || +price <= 0) {\r\n      setIsValidPrice(false);\r\n    } else {\r\n      setIsValidPrice(true);\r\n    };\r\n    if(!images) {\r\n      setIsValidImages(false);\r\n    } else {\r\n      setIsValidImages(true);\r\n    };\r\n    if(selectedRoomRooms.length === 0) {\r\n      setIsValidRoomRooms(false);\r\n    } else {\r\n      setIsValidRoomRooms(true);\r\n    };\r\n\r\n    if(\r\n      isValidName === false || \r\n      isValidType === false ||\r\n      isValidCity === false ||\r\n      isValidAddress === false ||\r\n      isValidDistance === false ||\r\n      isValidTitle === false ||\r\n      isValidDescription === false ||\r\n      isValidPrice === false ||\r\n      isValidImages === false ||\r\n      isValidRoomRooms === false\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const addRoom = {\r\n      name: name,\r\n      type: type,\r\n      city: city.split(' ').map(i => i[0].toUpperCase() + i.substring(1)).join(' '),\r\n      address: address,\r\n      distance: distance,\r\n      title: title,\r\n      description: description,\r\n      price: price,\r\n      images: images.split('\\n').join(','),\r\n      featured: featured,\r\n      rooms: selectedRoomRooms\r\n    }\r\n\r\n    axios\r\n      .post('/Room/add-Room', addRoom)\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err))\r\n\r\n    navigate('/Room');\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n    <SideBar />\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"pageContent\">\r\n        <Card className=\"ahCard\">\r\n          <div className=\"listTitle ahListTitle\">add new Room</div>\r\n        </Card>\r\n        <Card className=\"ahCardForm\">\r\n          <form className=\"formControl\">\r\n            <Input \r\n              id=\"title\"\r\n              isValid={isValidTitle}\r\n              label=\"Title\"\r\n              type=\"text\"\r\n              placeholder=\"The best Room\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <Input \r\n              id=\"description\"\r\n              isValid={isValidDescription}\r\n              label=\"Description\"\r\n              type=\"text\"\r\n              placeholder=\"description\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n            <Input \r\n              id=\"price\"\r\n              isValid={isValidPrice}\r\n              label=\"Price\"\r\n              type=\"number\"\r\n              placeholder=\"100\"\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n            />\r\n            <div className=\"inputFormControl\">\r\n              <div \r\n                className={\"formLabel \" + (isValidImages ? \"\" : \"labelInvalid\")}\r\n                >Images\r\n              </div>\r\n              <textarea \r\n                name=\"ahImages\" \r\n                className={\"ahImages \" + (isValidImages ? \"\" : \"labelInvalid\")} \r\n                value={images}\r\n                onChange={(e) => setImages(e.target.value)}\r\n                rows=\"3\"\r\n                cols=\"50\"\r\n              />\r\n            </div>\r\n            <div className=\"inputFormControl\">\r\n              <div \r\n                className={\"formLabel \"}\r\n                >Featured\r\n              </div>\r\n              <select \r\n                name=\"ahFeatured\" \r\n                id=\"ahFeatured\"\r\n                className={\"ahFeatured \"} \r\n                value={featured}\r\n                onChange={(e) => setFeatured(e.target.value)}\r\n              >\r\n                <option value={false}>No</option>\r\n                <option value={true}>Yes</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"inputFormControl ahRoomRooms\">\r\n              <div \r\n                className={\"formLabel \" + (isValidRoomRooms ? \"\" : \"labelInvalid\")}\r\n                >Rooms (multiple select: ctrl + click)\r\n              </div>\r\n              <select \r\n                name=\"ahRoomRooms\" \r\n                id=\"ahFeatured\"\r\n                className={\"ahRoomRooms \" + (isValidRoomRooms ? \"\" : \"labelInvalid\")} \r\n                value={selectedRoomRooms}\r\n                onChange={RoomRoomsSelectHandler}\r\n                multiple\r\n              >\r\n                {rooms.map(r => \r\n                  <option value={r._id} key={r._id}>{r.desc}</option>\r\n                )}\r\n              </select>\r\n            </div>\r\n            <button \r\n              className=\"btnSend\"\r\n              onClick={addRoomHandler}\r\n            >Send\r\n            </button>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default AddRoom;"]},"metadata":{},"sourceType":"module"}