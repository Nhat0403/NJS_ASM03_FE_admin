{"ast":null,"code":"var _jsxFileName = \"D:\\\\funix\\\\NJS301x_1.0-A_VN L\\u1EADp tr\\xECnh Web Back-End v\\u1EDBi NodeJS\\\\assignment 02\\\\Frontend Assignemnt 02 Admin App\\\\src\\\\components\\\\auth\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport './auth.css';\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { authActions } from \"../../hook/auth\";\nimport { currentUser, saveToStorage } from \"../../hook/lib\";\nimport { useAPI } from \"../../store/APIContext\";\nimport axios from \"../../util/axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = pros => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorUsername, setErrorUsername] = useState('');\n  const [errorPassword, setErrorPassword] = useState('');\n  const [isValidUsername, setIsValidUsername] = useState(true);\n  const [isValidPassword, setIsValidPassword] = useState(true); // const { users } = useAPI();\n\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    async function f() {\n      const req = await axios.get('/user');\n      setUsers(req.data);\n    }\n\n    f();\n  }, []);\n  console.log(users);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onChangeUsername = e => {\n    setUsername(e.target.value);\n  };\n\n  const onChangePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  const loginHandler = e => {\n    e.preventDefault(); // console.log(username);\n\n    if (!username) {\n      setIsValidUsername(false);\n      setErrorUsername('username is empty');\n    } else {\n      setIsValidUsername(true);\n    }\n\n    if (password.trim() === '') {\n      setIsValidPassword(false);\n      setErrorPassword('password is empty');\n    } else {\n      setErrorUsername(true);\n    }\n\n    console.log(users);\n    const isUserAdmin = users.filter(i => i.username.includes(username))[0].isAdmin;\n    const filteredUser = users.filter(i => i.username.includes(username))[0];\n\n    if (!users.map(i => i.username).includes(username)) {\n      setIsValidUsername(false);\n      setErrorUsername(username + ' does not exist');\n    } else if (!isUserAdmin) {\n      setIsValidUsername(false);\n      setErrorUsername(username + ' is not admin');\n    } else {\n      setIsValidUsername(true);\n    }\n\n    console.log('u ' + isValidUsername);\n    console.log('p ' + isValidPassword);\n\n    if (!isValidUsername || !isValidPassword) {\n      return;\n    }\n\n    if (isValidUsername && isValidPassword) {\n      if (isUserAdmin && filteredUser.password === password) {\n        dispatch(authActions.login());\n\n        while (currentUser.length > 0) {\n          currentUser.pop();\n        }\n\n        ;\n        currentUser.push(filteredUser);\n        saveToStorage('currentUser', currentUser); // console.log(currentUser);\n      }\n\n      ;\n      navigate('/home');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"centered\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"username\",\n          className: \"form-control\",\n          value: username,\n          onChange: onChangeUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), !isValidUsername && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\",\n            marginBottom: \"1rem\"\n          },\n          children: errorUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"password\",\n          className: \"form-control\",\n          value: password,\n          onChange: onChangePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this), !isValidPassword && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\",\n            marginBottom: \"1rem\"\n          },\n          children: errorPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          onClick: loginHandler,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"csamRK1sXukyqMeql8dCb32O8xM=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/funix/NJS301x_1.0-A_VN Lập trình Web Back-End với NodeJS/assignment 02/Frontend Assignemnt 02 Admin App/src/components/auth/Login.jsx"],"names":["useEffect","useState","useDispatch","useNavigate","authActions","currentUser","saveToStorage","useAPI","axios","Login","pros","username","setUsername","password","setPassword","errorUsername","setErrorUsername","errorPassword","setErrorPassword","isValidUsername","setIsValidUsername","isValidPassword","setIsValidPassword","users","setUsers","f","req","get","data","console","log","dispatch","navigate","onChangeUsername","e","target","value","onChangePassword","loginHandler","preventDefault","trim","isUserAdmin","filter","i","includes","isAdmin","filteredUser","map","login","length","pop","push","color","marginBottom"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport './auth.css'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { authActions } from \"../../hook/auth\";\r\nimport { currentUser, saveToStorage } from \"../../hook/lib\";\r\nimport { useAPI } from \"../../store/APIContext\";\r\nimport axios from \"../../util/axios\";\r\n\r\nconst Login = (pros) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [errorUsername, setErrorUsername] = useState('');\r\n  const [errorPassword, setErrorPassword] = useState('');\r\n\r\n  const [isValidUsername, setIsValidUsername] = useState(true);\r\n  const [isValidPassword, setIsValidPassword] = useState(true);\r\n\r\n  // const { users } = useAPI();\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function f() {\r\n      const req = await axios.get('/user');\r\n      setUsers(req.data);\r\n    }\r\n    f();\r\n  }, [])\r\n\r\n  console.log(users);\r\n \r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const onChangeUsername = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const loginHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    // console.log(username);\r\n\r\n    if(!username) {\r\n      setIsValidUsername(false);\r\n      setErrorUsername('username is empty');\r\n    } else {\r\n      setIsValidUsername(true);\r\n    }\r\n\r\n    if(password.trim() === '') {\r\n      setIsValidPassword(false);\r\n      setErrorPassword('password is empty');\r\n    } else {\r\n      setErrorUsername(true);\r\n    }\r\n    console.log(users);\r\n    const isUserAdmin = users.filter(i => i.username.includes(username))[0].isAdmin;\r\n    const filteredUser = users.filter(i => i.username.includes(username))[0];\r\n    \r\n    if(!users.map(i => i.username).includes(username)) {\r\n      setIsValidUsername(false);\r\n      setErrorUsername(username + ' does not exist');\r\n    } else if(!isUserAdmin) {\r\n      setIsValidUsername(false);\r\n      setErrorUsername(username + ' is not admin');\r\n    } else {\r\n      setIsValidUsername(true);\r\n    }\r\n\r\n    console.log('u '+isValidUsername);\r\n    console.log('p '+isValidPassword);\r\n    \r\n    if(!isValidUsername || !isValidPassword) {\r\n      return;\r\n    }\r\n\r\n    if(isValidUsername && isValidPassword) {\r\n      if(\r\n        isUserAdmin &&\r\n        filteredUser.password === password \r\n      ) {\r\n        dispatch(authActions.login());\r\n        while(currentUser.length > 0) {\r\n          currentUser.pop();\r\n        };\r\n        currentUser.push(filteredUser);\r\n        saveToStorage('currentUser', currentUser);\r\n        // console.log(currentUser);\r\n      };\r\n      navigate('/home');\r\n    }\r\n  };\r\n  return <>\r\n    <main className=\"centered\">\r\n      <h1>Login</h1>\r\n      <form className=\"form-group\">\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"username\" \r\n          className=\"form-control\" \r\n          value={username}\r\n          onChange={onChangeUsername}\r\n        />\r\n        {!isValidUsername && (<span style={{ color: \"red\", marginBottom: \"1rem\" }}>{errorUsername}</span>)}\r\n        <input \r\n          type=\"password\" \r\n          placeholder=\"password\" \r\n          className=\"form-control\" \r\n          value={password}\r\n          onChange={onChangePassword}\r\n        />\r\n        {!isValidPassword && (<span style={{ color: \"red\", marginBottom: \"1rem\" }}>{errorPassword}</span>)}\r\n        <button \r\n          type=\"submit\" \r\n          className=\"btn\"\r\n          onClick={loginHandler}\r\n        >Login</button>\r\n      </form>\r\n    </main>\r\n  </>\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}