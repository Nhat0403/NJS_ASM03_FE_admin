{"ast":null,"code":"var _jsxFileName = \"D:\\\\funix\\\\NJS301x_1.0-A_VN L\\u1EADp tr\\xECnh Web Back-End v\\u1EDBi NodeJS\\\\assignment 03\\\\Frontend Assignemnt 03 Admin App\\\\src\\\\components\\\\chatList\\\\ChatList.jsx\",\n    _s = $RefreshSig$();\n\nimport queryString from 'query-string';\nimport { useEffect, useState } from 'react';\nimport ChatRoomsAPI from '../../API/ChatRoomsAPI';\nimport { onBlurHandler, onChangeHanlder, valid, validRequire } from '../../util/validators';\nimport Input from '../UI/Input';\nimport './ChatList.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://54.254.177.24:5000', {\n  transports: ['websocket']\n});\n\nconst ChatList = () => {\n  _s();\n\n  const [chatSearch, setChatSearch] = useState({\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [valid({\n      type: true\n    })]\n  });\n  const [textMessage, setTextMessage] = useState('');\n  const [chatList, setChatList] = useState([]);\n  const [message, setMessage] = useState([]);\n  const [roomId, setRoomId] = useState('');\n  const [load, setLoad] = useState(false);\n  const cookieId = document.cookie.split('=')[1];\n  console.log(chatSearch.value);\n  useEffect(() => {\n    const getAllRoom = async () => {\n      const params = {\n        cookieId: cookieId\n      };\n      const query = '?' + queryString.stringify(params);\n      const response = await ChatRoomsAPI.getAllRoom(query);\n      setChatList(response);\n\n      if (response) {\n        setLoad(false);\n      }\n    };\n\n    getAllRoom();\n  }, []);\n\n  const onChat = e => {\n    e.preventDefault();\n    setRoomId(e.target.id);\n    console.log(e.target.id);\n  };\n\n  const getMessageByRoomId = async () => {\n    const response = await ChatRoomsAPI.getMessageByRoomId(roomId);\n    console.log(response);\n    setMessage(response.content);\n\n    if (response) {\n      setLoad(false);\n    }\n  };\n\n  const handlerSend = async () => {\n    const params = {\n      message: textMessage,\n      roomId: roomId,\n      cookieId: cookieId\n    };\n    const query = '?' + queryString.stringify(params);\n\n    if (roomId && textMessage.trim() !== '') {\n      await ChatRoomsAPI.addMessage(query);\n      setTextMessage('');\n      setTimeout(() => {\n        setLoad(true);\n        getMessageByRoomId(); // socket.emit('send_message', data);\n      }, 200);\n      setLoad(false);\n    }\n  };\n\n  useEffect(() => {\n    const searchMessage = async () => {\n      const params = {\n        cookieId: cookieId,\n        chatSearch: chatSearch.value\n      };\n      const query = '?' + queryString.stringify(params);\n      const response = await ChatRoomsAPI.searchMessage(query);\n      setChatList(response);\n    };\n\n    searchMessage();\n  }, [chatSearch]);\n  useEffect(() => {\n    setLoad(true);\n\n    if (roomId.trim() !== '') {\n      getMessageByRoomId();\n    }\n\n    setTimeout(() => {\n      setLoad(false);\n    }, 2000);\n  }, [roomId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n      children: \"Apps / Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), load && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper_loader\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this), !load && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatInfo flex-column\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatSearch\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            control: \"input\",\n            type: \"search\",\n            id: \"chatSearch\",\n            placeholder: \"Search Contact\",\n            required: true,\n            onChange: e => onChangeHanlder(e, setChatSearch, chatSearch.validators),\n            onBlur: e => onBlurHandler(e, setChatSearch, chatSearch.validators),\n            value: chatSearch.value,\n            isValid: chatSearch.valid,\n            isTouched: chatSearch.touched,\n            className: \"chatListItem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), chatList && chatList.map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex chatListItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"avatar\",\n              src: \"https://img.icons8.com/color/36/000000/administrator-male.png\",\n              alt: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: value._id.toString(),\n              onClick: onChat,\n              children: value._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, value._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMedia\",\n          children: message && message.map(value => value.is_admin ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media media-chat media-chat-right\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-body\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"You: \", value.message]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this)\n          }, value._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media media-chat media-chat-reverse\",\n            children: [' ', /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"avatar\",\n              src: \"https://img.icons8.com/color/36/000000/administrator-male.png\",\n              alt: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-body\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Client: \", value.message]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this)\n            }, value.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this)]\n          }, value._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatField flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"textMessage\",\n            placeholder: \"Type and enter\",\n            required: true,\n            onChange: e => setTextMessage(e.target.value),\n            value: textMessage,\n            className: \"chatListItem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatFieldIcon\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handlerSend,\n              className: \"chatFieldBtn\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPaperPlane,\n                className: \"sbIcon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatList, \"Ox9GwgbF3iW0xEdxe3kRC8V6NJs=\");\n\n_c = ChatList;\nexport default ChatList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"sources":["D:/funix/NJS301x_1.0-A_VN Lập trình Web Back-End với NodeJS/assignment 03/Frontend Assignemnt 03 Admin App/src/components/chatList/ChatList.jsx"],"names":["queryString","useEffect","useState","ChatRoomsAPI","onBlurHandler","onChangeHanlder","valid","validRequire","Input","FontAwesomeIcon","faPaperPlane","io","socket","transports","ChatList","chatSearch","setChatSearch","value","touched","validators","type","textMessage","setTextMessage","chatList","setChatList","message","setMessage","roomId","setRoomId","load","setLoad","cookieId","document","cookie","split","console","log","getAllRoom","params","query","stringify","response","onChat","e","preventDefault","target","id","getMessageByRoomId","content","handlerSend","trim","addMessage","setTimeout","searchMessage","map","_id","toString","is_admin"],"mappings":"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","sourcesContent":["import queryString from 'query-string';\r\nimport { useEffect, useState } from 'react';\r\nimport ChatRoomsAPI from '../../API/ChatRoomsAPI';\r\nimport { onBlurHandler, onChangeHanlder, valid, validRequire } from '../../util/validators';\r\nimport Input from '../UI/Input';\r\nimport './ChatList.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPaperPlane\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport io from 'socket.io-client';\r\nconst socket = io('http://54.254.177.24:5000', { transports : ['websocket']});\r\n\r\nconst ChatList = () => {\r\n  const [chatSearch, setChatSearch] = useState({\r\n    value: '',\r\n    valid: false,\r\n    touched: false,\r\n    validators: [valid({ type: true })]\r\n  });\r\n  const [textMessage, setTextMessage] = useState('');\r\n  const [chatList, setChatList] = useState([]);\r\n  const [message, setMessage] = useState([]);\r\n  const [roomId, setRoomId] = useState('');\r\n  const [load, setLoad] = useState(false);\r\n  const cookieId = document.cookie.split('=')[1];\r\n\r\n  console.log(chatSearch.value);\r\n    \r\n  useEffect(() => {\r\n    const getAllRoom = async() => {\r\n      const params = {\r\n        cookieId: cookieId\r\n      }\r\n      const query = '?' + queryString.stringify(params);\r\n      const response = await ChatRoomsAPI.getAllRoom(query);\r\n      setChatList(response);\r\n      if(response) {\r\n        setLoad(false);\r\n      }\r\n    }\r\n    getAllRoom();\r\n  }, [])\r\n  \r\n  const onChat = (e) => {\r\n    e.preventDefault();\r\n    setRoomId(e.target.id);\r\n    console.log(e.target.id);\r\n  }\r\n\r\n  const getMessageByRoomId = async () => {\r\n\t\tconst response = await ChatRoomsAPI.getMessageByRoomId(roomId);\r\n\t\tconsole.log(response);\r\n\t\tsetMessage(response.content);\r\n    if(response) {\r\n      setLoad(false);\r\n    }\r\n\t};\r\n\r\n  const handlerSend = async() => {\r\n    const params = {\r\n      message: textMessage,\r\n      roomId: roomId,\r\n      cookieId: cookieId\r\n    }\r\n    const query = '?' + queryString.stringify(params);\r\n    if(roomId && textMessage.trim() !== '') {\r\n      await ChatRoomsAPI.addMessage(query);\r\n\t\t\tsetTextMessage('');\r\n\t\t\t\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetLoad(true);\r\n        getMessageByRoomId();\r\n      // socket.emit('send_message', data);\r\n\t\t\t}, 200);\r\n      setLoad(false);\r\n    }\r\n  }  \r\n\r\n  useEffect(() => {\r\n    const searchMessage = async() => {\r\n      const params = {\r\n        cookieId: cookieId,\r\n        chatSearch: chatSearch.value\r\n      }\r\n      const query = '?' + queryString.stringify(params);\r\n      const response = await ChatRoomsAPI.searchMessage(query);\r\n      setChatList(response);\r\n    }\r\n    searchMessage();\r\n  }, [chatSearch]);\r\n\r\n\tuseEffect(() => {\r\n    setLoad(true);\r\n    if(roomId.trim() !== '') {\r\n      getMessageByRoomId();\r\n    }\r\n    setTimeout(() => {\r\n      setLoad(false)\r\n    }, 2000)\r\n\t}, [roomId])\r\n\r\n  return (\r\n    <div>\r\n      <h1>Chat</h1>\r\n      <em>Apps / Chat</em>\r\n      {load && (\r\n\t\t\t\t<div className='wrapper_loader'>\r\n\t\t\t\t\t<div className='loader'></div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n      {!load && \r\n      <div className='bg-white container'>\r\n        <div className=\"chatInfo flex-column\">\r\n          <div className=\"chatSearch\">\r\n            <Input \r\n              control='input'\r\n              type='search'\r\n              id='chatSearch'\r\n              placeholder='Search Contact'\r\n              required={true}\r\n              onChange={e => onChangeHanlder(e, setChatSearch, chatSearch.validators)}\r\n              onBlur={e => onBlurHandler(e, setChatSearch, chatSearch.validators)}\r\n              value={chatSearch.value}\r\n              isValid={chatSearch.valid}\r\n              isTouched={chatSearch.touched}\r\n              className='chatListItem'\r\n            />\r\n            {chatList && chatList.map(value => \r\n              <div \r\n                key={value._id} \r\n                className='flex chatListItem'\r\n              >\r\n                <img\r\n                  className='avatar'\r\n                  src='https://img.icons8.com/color/36/000000/administrator-male.png'\r\n                  alt='...'\r\n                />\r\n                <div \r\n                  id={value._id.toString()} \r\n                  onClick={onChat}\r\n                >{value._id}</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"chatBox\">\r\n          <div className=\"chatMedia\">\r\n            {message && message.map(value =>\r\n              value.is_admin ? (\r\n                <div\r\n                  className='media media-chat media-chat-right'\r\n                  key={value._id}>\r\n                  <div className='media-body'>\r\n                    <p>You: {value.message}</p>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className='media media-chat media-chat-reverse'\r\n                  key={value._id}>\r\n                  {' '}\r\n                  <img\r\n                    className='avatar'\r\n                    src='https://img.icons8.com/color/36/000000/administrator-male.png'\r\n                    alt='...'\r\n                  />\r\n                  <div className='media-body' key={value.id}>\r\n                    <p>Client: {value.message}</p>\r\n                  </div>\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n          <div className=\"chatField flex\">\r\n            <input \r\n              type='text'\r\n              id='textMessage'\r\n              placeholder='Type and enter'\r\n              required={true}\r\n              onChange={e => setTextMessage(e.target.value)}\r\n              value={textMessage}\r\n              className='chatListItem'\r\n            />\r\n            <div className='chatFieldIcon'>\r\n              <button onClick={handlerSend} className='chatFieldBtn'>\r\n                <FontAwesomeIcon icon={faPaperPlane} className=\"sbIcon\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>   \r\n      </div>\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ChatList;"]},"metadata":{},"sourceType":"module"}