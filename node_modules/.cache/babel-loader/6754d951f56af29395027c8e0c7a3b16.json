{"ast":null,"code":"var _jsxFileName = \"D:\\\\funix\\\\NJS301x_1.0-A_VN L\\u1EADp tr\\xECnh Web Back-End v\\u1EDBi NodeJS\\\\assignment 03\\\\Frontend Assignemnt 03 Admin App\\\\src\\\\components\\\\auth\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport './auth.css';\nimport { useDispatch } from \"react-redux\";\nimport { setTouched } from \"../hook/lib\";\nimport { useNavigate } from \"react-router-dom\";\nimport Input from \"../UI/Input\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport { onBlurHandler, onChangeHanlder, validEmail, validLength, validRequire } from \"../../util/validators\";\nimport PageContainer from \"../pageContainer/PageContainer\";\nimport queryString from \"query-string\";\nimport UserAPI from \"../../API/UserAPI\";\nimport setCookie from \"../../setCookie\";\nimport { addSession } from '../Redux/Action/ActionSession';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = pros => {\n  _s();\n\n  const [email, setEmail] = useState({\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [validLength({\n      min: 4\n    }), validEmail, validRequire]\n  });\n  const [password, setPassword] = useState({\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [validLength({\n      min: 4\n    }), validRequire]\n  });\n  const [error, setError] = useState();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const loginHandler = e => {\n    e.preventDefault();\n    setTouched(setEmail);\n    setTouched(setPassword);\n    console.log(email.value);\n\n    if (email.valid) {\n      const params = {\n        email: email.value,\n        password: password.value\n      };\n      const query = '?' + queryString.stringify(params);\n      UserAPI.postLogin(query).then(response => {\n        if (response) {\n          console.log(response);\n          localStorage.setItem('id_user', response._id);\n          localStorage.setItem('name_user', response.fullname);\n          const action = addSession(localStorage.getItem('id_user'));\n          dispatch(action);\n          setCookie('user_token', response.token, +1);\n          console.log('id_user: ' + localStorage.getItem('id_user'));\n          console.log('token: ' + document.cookie.split('=')[1]);\n          navigate('/chat');\n        }\n      }).catch(err => {\n        console.log(err);\n        setError({\n          title: 'Validation failed!',\n          message: err.response.data.message\n        });\n      });\n    }\n\n    ;\n\n    if (!email.valid || !password.valid) {\n      // console.log('no');\n      return setError({\n        title: 'Validation failed!',\n        message: 'Invalid email or password!'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onConfirm: () => setError(null),\n      error: !!error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"centered\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            control: \"input\",\n            id: \"email\",\n            type: \"text\",\n            placeholder: \"email\",\n            required: true,\n            onChange: e => onChangeHanlder(e, setEmail, email.validators),\n            onBlur: e => onBlurHandler(e, setEmail, email.validators),\n            value: email.value,\n            isValid: email.valid,\n            isTouched: email.touched\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            control: \"input\",\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"password\",\n            onChange: e => onChangeHanlder(e, setPassword, password.validators),\n            onBlur: e => onBlurHandler(e, setPassword, password.validators),\n            required: true,\n            value: password.value,\n            isValid: password.valid,\n            isTouched: password.touched\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn\",\n            onClick: loginHandler,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"oYAYI0g8kxXS3T53MdSmJMes4H4=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/funix/NJS301x_1.0-A_VN Lập trình Web Back-End với NodeJS/assignment 03/Frontend Assignemnt 03 Admin App/src/components/auth/Login.jsx"],"names":["useState","useDispatch","setTouched","useNavigate","Input","ErrorModal","onBlurHandler","onChangeHanlder","validEmail","validLength","validRequire","PageContainer","queryString","UserAPI","setCookie","addSession","Login","pros","email","setEmail","value","valid","touched","validators","min","password","setPassword","error","setError","dispatch","navigate","loginHandler","e","preventDefault","console","log","params","query","stringify","postLogin","then","response","localStorage","setItem","_id","fullname","action","getItem","token","document","cookie","split","catch","err","title","message","data"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport './auth.css'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setTouched } from \"../hook/lib\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Input from \"../UI/Input\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\nimport { onBlurHandler, onChangeHanlder, validEmail, validLength, validRequire } from \"../../util/validators\";\r\nimport PageContainer from \"../pageContainer/PageContainer\";\r\nimport queryString from \"query-string\";\r\nimport UserAPI from \"../../API/UserAPI\";\r\nimport setCookie from \"../../setCookie\";\r\nimport { addSession } from '../Redux/Action/ActionSession';\r\n\r\nconst Login = (pros) => {\r\n  const [email, setEmail] = useState({\r\n    value: '',\r\n    valid: false,\r\n    touched: false,\r\n    validators: [validLength({ min: 4 }), validEmail, validRequire]\r\n  });\r\n  const [password, setPassword] = useState({\r\n    value: '',\r\n    valid: false,\r\n    touched: false,\r\n    validators: [validLength({ min: 4 }), validRequire]\r\n  });\r\n\r\n  const [error, setError] = useState();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const loginHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    setTouched(setEmail);\r\n    setTouched(setPassword);\r\n\r\n    console.log(email.value);\r\n\r\n    if(email.valid) {\r\n      const params = {\r\n        email: email.value,\r\n        password: password.value\r\n      }\r\n      const query = '?' + queryString.stringify(params);\r\n      UserAPI.postLogin(query)\r\n        .then(response => {\r\n          if(response) {\r\n            console.log(response);\r\n            localStorage.setItem('id_user', response._id);\r\n            localStorage.setItem('name_user', response.fullname);\r\n            const action = addSession(localStorage.getItem('id_user'));\r\n            dispatch(action);\r\n            setCookie('user_token', response.token, +1);\r\n            console.log('id_user: ' + localStorage.getItem('id_user'));\r\n            console.log('token: ' + document.cookie.split('=')[1]);\r\n            navigate('/chat');\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          setError({\r\n            title: 'Validation failed!',\r\n            message: err.response.data.message\r\n          })\r\n        });\r\n    };\r\n\r\n    if(!email.valid || !password.valid) {\r\n      // console.log('no');\r\n      return setError({\r\n        title: 'Validation failed!',\r\n        message: 'Invalid email or password!'\r\n      })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && (\r\n        <ErrorModal\r\n          title={error.title}\r\n          message={error.message}\r\n          onConfirm={() => setError(null)}\r\n          error={!!error}\r\n        />\r\n      )}\r\n      <PageContainer>\r\n        <main className=\"centered\">\r\n          <h1>Login</h1>\r\n          <form className=\"form-group\">\r\n            <Input\r\n              control=\"input\"\r\n              id=\"email\"\r\n              type=\"text\" \r\n              placeholder=\"email\" \r\n              required={true}\r\n              onChange={e => onChangeHanlder(e, setEmail, email.validators)}\r\n              onBlur={e => onBlurHandler(e, setEmail, email.validators)}\r\n              value={email.value}\r\n              isValid={email.valid}\r\n              isTouched={email.touched}\r\n            />\r\n            <Input \r\n              control=\"input\"\r\n              id=\"password\"\r\n              type=\"password\" \r\n              placeholder=\"password\"\r\n              onChange={e => onChangeHanlder(e, setPassword, password.validators)}\r\n              onBlur={e => onBlurHandler(e, setPassword, password.validators)}\r\n              required={true}\r\n              value={password.value}\r\n              isValid={password.valid}\r\n              isTouched={password.touched}\r\n            />\r\n            <button \r\n              type=\"submit\" \r\n              className=\"btn\"\r\n              onClick={loginHandler}\r\n            >Login</button>\r\n          </form>\r\n        </main>\r\n      </PageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}