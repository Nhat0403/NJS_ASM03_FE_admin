{"ast":null,"code":"var _jsxFileName = \"D:\\\\funix\\\\NJS301x_1.0-A_VN L\\u1EADp tr\\xECnh Web Back-End v\\u1EDBi NodeJS\\\\assignment 03\\\\Frontend Assignemnt 03 Admin App\\\\src\\\\components\\\\auth\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"../../util/axios\";\nimport { useContext, useState } from \"react\";\nimport './auth.css';\nimport { useDispatch } from \"react-redux\";\nimport { authActions } from \"../hook/auth\";\nimport { currentUser, saveToStorage, setTouched } from \"../hook/lib\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Input from \"../UI/Input\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport { onBlurHandler, onChangeHanlder, validLength, validRequire } from \"../../util/validators\";\nimport PageContainer from \"../pageContainer/PageContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = pros => {\n  _s();\n\n  const [username, setUsername] = useState({\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [validLength({\n      min: 4\n    }), validRequire]\n  });\n  const [password, setPassword] = useState({\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [validLength({\n      min: 4\n    }), validRequire]\n  });\n  const [error, setError] = useState();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const loginHandler = e => {\n    e.preventDefault();\n    setTouched(setUsername);\n    setTouched(setPassword);\n\n    if (username.valid) {\n      axios.post('/user/admin/login', {\n        username: username.value,\n        password: password.value\n      }).then(res => {\n        if (res.status === 200 || res.status === 201) {\n          // console.log(res);\n          dispatch(authActions.login());\n\n          while (currentUser.length > 0) {\n            currentUser.pop();\n          }\n\n          ;\n          currentUser.push(res.data);\n          saveToStorage('currentUser', currentUser);\n        }\n      }).then(result => {\n        console.log(result);\n        navigate('/home');\n      }).catch(err => {\n        setError({\n          title: 'Validation failed!',\n          message: err.response.data.message\n        });\n      });\n    }\n\n    ;\n\n    if (!username.valid || !password.valid) {\n      // console.log('no');\n      return setError({\n        title: 'Validation failed!',\n        message: 'Invalid username or password!'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onConfirm: () => setError(null),\n      error: !!error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"centered\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            control: \"input\",\n            id: \"username\",\n            type: \"text\",\n            placeholder: \"username\",\n            required: true,\n            onChange: e => onChangeHanlder(e, setUsername, username.validators),\n            onBlur: e => onBlurHandler(e, setUsername, username.validators),\n            value: username.value,\n            isValid: username.valid,\n            isTouched: username.touched\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            control: \"input\",\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"password\",\n            onChange: e => onChangeHanlder(e, setPassword, password.validators),\n            onBlur: e => onBlurHandler(e, setPassword, password.validators),\n            required: true,\n            value: password.value,\n            isValid: password.valid,\n            isTouched: password.touched\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn\",\n            onClick: loginHandler,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"6ypb+GhPDw2O/t7WKgcMZNDpzTE=\", false, function () {\n  return [useDispatch, useNavigate, useLocation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/funix/NJS301x_1.0-A_VN Lập trình Web Back-End với NodeJS/assignment 03/Frontend Assignemnt 03 Admin App/src/components/auth/Login.jsx"],"names":["axios","useContext","useState","useDispatch","authActions","currentUser","saveToStorage","setTouched","useLocation","useNavigate","Input","ErrorModal","onBlurHandler","onChangeHanlder","validLength","validRequire","PageContainer","Login","pros","username","setUsername","value","valid","touched","validators","min","password","setPassword","error","setError","dispatch","navigate","location","loginHandler","e","preventDefault","post","then","res","status","login","length","pop","push","data","result","console","log","catch","err","title","message","response"],"mappings":"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","sourcesContent":["import axios from \"../../util/axios\";\r\nimport { useContext, useState } from \"react\";\r\nimport './auth.css'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authActions } from \"../hook/auth\";\r\nimport { currentUser, saveToStorage, setTouched } from \"../hook/lib\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Input from \"../UI/Input\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\nimport { onBlurHandler, onChangeHanlder, validLength, validRequire } from \"../../util/validators\";\r\nimport PageContainer from \"../pageContainer/PageContainer\";\r\n\r\nconst Login = (pros) => {\r\n  const [username, setUsername] = useState({\r\n    value: '',\r\n    valid: false,\r\n    touched: false,\r\n    validators: [validLength({ min: 4 }), validRequire]\r\n  });\r\n  const [password, setPassword] = useState({\r\n    value: '',\r\n    valid: false,\r\n    touched: false,\r\n    validators: [validLength({ min: 4 }), validRequire]\r\n  });\r\n\r\n  const [error, setError] = useState();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const loginHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    setTouched(setUsername);\r\n    setTouched(setPassword);\r\n\r\n    if(username.valid) {\r\n      axios.post('/user/admin/login', {\r\n        username: username.value,\r\n        password: password.value,\r\n      })\r\n      .then(res => {\r\n        if(res.status === 200 || res.status === 201) {\r\n          // console.log(res);\r\n          dispatch(authActions.login());\r\n          while(currentUser.length > 0) {\r\n            currentUser.pop();\r\n          };\r\n          currentUser.push(res.data);\r\n          saveToStorage('currentUser', currentUser);\r\n        }\r\n      })\r\n      .then(result => {\r\n        console.log(result)\r\n        navigate('/home');\r\n      })\r\n      .catch(err => {\r\n        setError({\r\n          title: 'Validation failed!',\r\n          message: err.response.data.message\r\n        })\r\n      });\r\n    };\r\n\r\n    if(!username.valid || !password.valid) {\r\n      // console.log('no');\r\n      return setError({\r\n        title: 'Validation failed!',\r\n        message: 'Invalid username or password!'\r\n      })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && (\r\n        <ErrorModal\r\n          title={error.title}\r\n          message={error.message}\r\n          onConfirm={() => setError(null)}\r\n          error={!!error}\r\n        />\r\n      )}\r\n      <PageContainer>\r\n        <main className=\"centered\">\r\n          <h1>Login</h1>\r\n          <form className=\"form-group\">\r\n            <Input\r\n              control=\"input\"\r\n              id=\"username\"\r\n              type=\"text\" \r\n              placeholder=\"username\" \r\n              required={true}\r\n              onChange={e => onChangeHanlder(e, setUsername, username.validators)}\r\n              onBlur={e => onBlurHandler(e, setUsername, username.validators)}\r\n              value={username.value}\r\n              isValid={username.valid}\r\n              isTouched={username.touched}\r\n            />\r\n            <Input \r\n              control=\"input\"\r\n              id=\"password\"\r\n              type=\"password\" \r\n              placeholder=\"password\"\r\n              onChange={e => onChangeHanlder(e, setPassword, password.validators)}\r\n              onBlur={e => onBlurHandler(e, setPassword, password.validators)}\r\n              required={true}\r\n              value={password.value}\r\n              isValid={password.valid}\r\n              isTouched={password.touched}\r\n            />\r\n            <button \r\n              type=\"submit\" \r\n              className=\"btn\"\r\n              onClick={loginHandler}\r\n            >Login</button>\r\n          </form>\r\n        </main>\r\n      </PageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}