{"ast":null,"code":"var _jsxFileName = \"D:\\\\funix\\\\NJS301x_1.0-A_VN L\\u1EADp tr\\xECnh Web Back-End v\\u1EDBi NodeJS\\\\assignment 02\\\\Frontend Assignemnt 02 Admin App\\\\src\\\\store\\\\provider\\\\transaction.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  transaction: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"getTranaction\":\n      {\n        return {\n          transaction: action.transaction\n        };\n      }\n      ;\n  }\n\n  ;\n};\n\nconst TransactionProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(initialState, reducer);\n\n  const getTranaction = transaction => {\n    dispatch({\n      type: \"getTransaction\",\n      transaction\n    });\n  };\n\n  const context = {\n    transaction: state.transaction,\n    getTranaction\n  };\n  return /*#__PURE__*/_jsxDEV(TransactionContext.Provider, {\n    value: context,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionProvider, \"yGcfv1/rtAwt1BCHpNYsK/6eLNQ=\");\n\n_c = TransactionProvider;\nexport default TransactionProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionProvider\");","map":{"version":3,"sources":["D:/funix/NJS301x_1.0-A_VN Lập trình Web Back-End với NodeJS/assignment 02/Frontend Assignemnt 02 Admin App/src/store/provider/transaction.js"],"names":["useReducer","initialState","transaction","reducer","state","action","type","TransactionProvider","props","dispatch","getTranaction","context","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AAAsB;AACpB,eAAO;AAAEJ,UAAAA,WAAW,EAAEG,MAAM,CAACH;AAAtB,SAAP;AACD;AAAA;AAHH;;AAIC;AACF,CAND;;AAQA,MAAMK,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBT,UAAU,CAACC,YAAD,EAAeE,OAAf,CAApC;;AAEA,QAAMO,aAAa,GAAIR,WAAD,IAAiB;AACrCO,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAE,gBAAR;AAA0BJ,MAAAA;AAA1B,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMS,OAAO,GAAG;AACdT,IAAAA,WAAW,EAAEE,KAAK,CAACF,WADL;AAEdQ,IAAAA;AAFc,GAAhB;AAKA,sBACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEC,OAApC;AAAA,cACGH,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjBD;;GAAML,mB;;KAAAA,mB;AAmBN,eAAeA,mBAAf","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  transaction: [],\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"getTranaction\": {\r\n      return { transaction: action.transaction };\r\n    };\r\n  };\r\n};\r\n\r\nconst TransactionProvider = (props) => {\r\n  const [state, dispatch] = useReducer(initialState, reducer);\r\n\r\n  const getTranaction = (transaction) => {\r\n    dispatch({ type: \"getTransaction\", transaction });\r\n  };\r\n\r\n  const context = {\r\n    transaction: state.transaction,\r\n    getTranaction,\r\n  }\r\n\r\n  return (\r\n    <TransactionContext.Provider value={context}>\r\n      {props.children}\r\n    </TransactionContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TransactionProvider;"]},"metadata":{},"sourceType":"module"}