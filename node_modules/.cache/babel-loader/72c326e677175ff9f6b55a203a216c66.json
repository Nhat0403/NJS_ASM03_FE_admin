{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/funix/NJS301x_1.0-A_VN L\\u1EADp tr\\xECnh Web Back-End v\\u1EDBi NodeJS/assignment 03/Frontend Assignemnt 03 Admin App/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nexport function includeKeys(object, predicate) {\n  var result = {};\n\n  if (Array.isArray(predicate)) {\n    var _iterator = _createForOfIteratorHelper(predicate),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var key = _step.value;\n        var descriptor = Object.getOwnPropertyDescriptor(object, key);\n\n        if (descriptor !== null && descriptor !== void 0 && descriptor.enumerable) {\n          Object.defineProperty(result, key, descriptor);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else {\n    // `Reflect.ownKeys()` is required to retrieve symbol properties\n    var _iterator2 = _createForOfIteratorHelper(Reflect.ownKeys(object)),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _key = _step2.value;\n\n        var _descriptor = Object.getOwnPropertyDescriptor(object, _key);\n\n        if (_descriptor.enumerable) {\n          var value = object[_key];\n\n          if (predicate(_key, value, object)) {\n            Object.defineProperty(result, _key, _descriptor);\n          }\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  return result;\n}\nexport function excludeKeys(object, predicate) {\n  if (Array.isArray(predicate)) {\n    var set = new Set(predicate);\n    return includeKeys(object, function (key) {\n      return !set.has(key);\n    });\n  }\n\n  return includeKeys(object, function (key, value, object) {\n    return !predicate(key, value, object);\n  });\n}","map":{"version":3,"sources":["D:/funix/NJS301x_1.0-A_VN Lập trình Web Back-End với NodeJS/assignment 03/Frontend Assignemnt 03 Admin App/node_modules/filter-obj/index.js"],"names":["includeKeys","object","predicate","result","Array","isArray","key","descriptor","Object","getOwnPropertyDescriptor","enumerable","defineProperty","Reflect","ownKeys","value","excludeKeys","set","Set","has"],"mappings":";AAAA,OAAO,SAASA,WAAT,CAAqBC,MAArB,EAA6BC,SAA7B,EAAwC;AAC9C,MAAMC,MAAM,GAAG,EAAf;;AAEA,MAAIC,KAAK,CAACC,OAAN,CAAcH,SAAd,CAAJ,EAA8B;AAAA,+CACXA,SADW;AAAA;;AAAA;AAC7B,0DAA6B;AAAA,YAAlBI,GAAkB;AAC5B,YAAMC,UAAU,GAAGC,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,EAAwCK,GAAxC,CAAnB;;AACA,YAAIC,UAAJ,aAAIA,UAAJ,eAAIA,UAAU,CAAEG,UAAhB,EAA4B;AAC3BF,UAAAA,MAAM,CAACG,cAAP,CAAsBR,MAAtB,EAA8BG,GAA9B,EAAmCC,UAAnC;AACA;AACD;AAN4B;AAAA;AAAA;AAAA;AAAA;AAO7B,GAPD,MAOO;AACN;AADM,gDAEYK,OAAO,CAACC,OAAR,CAAgBZ,MAAhB,CAFZ;AAAA;;AAAA;AAEN,6DAA2C;AAAA,YAAhCK,IAAgC;;AAC1C,YAAMC,WAAU,GAAGC,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,EAAwCK,IAAxC,CAAnB;;AACA,YAAIC,WAAU,CAACG,UAAf,EAA2B;AAC1B,cAAMI,KAAK,GAAGb,MAAM,CAACK,IAAD,CAApB;;AACA,cAAIJ,SAAS,CAACI,IAAD,EAAMQ,KAAN,EAAab,MAAb,CAAb,EAAmC;AAClCO,YAAAA,MAAM,CAACG,cAAP,CAAsBR,MAAtB,EAA8BG,IAA9B,EAAmCC,WAAnC;AACA;AACD;AACD;AAVK;AAAA;AAAA;AAAA;AAAA;AAWN;;AAED,SAAOJ,MAAP;AACA;AAED,OAAO,SAASY,WAAT,CAAqBd,MAArB,EAA6BC,SAA7B,EAAwC;AAC9C,MAAIE,KAAK,CAACC,OAAN,CAAcH,SAAd,CAAJ,EAA8B;AAC7B,QAAMc,GAAG,GAAG,IAAIC,GAAJ,CAAQf,SAAR,CAAZ;AACA,WAAOF,WAAW,CAACC,MAAD,EAAS,UAAAK,GAAG;AAAA,aAAI,CAACU,GAAG,CAACE,GAAJ,CAAQZ,GAAR,CAAL;AAAA,KAAZ,CAAlB;AACA;;AAED,SAAON,WAAW,CAACC,MAAD,EAAS,UAACK,GAAD,EAAMQ,KAAN,EAAab,MAAb;AAAA,WAAwB,CAACC,SAAS,CAACI,GAAD,EAAMQ,KAAN,EAAab,MAAb,CAAlC;AAAA,GAAT,CAAlB;AACA","sourcesContent":["export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n"]},"metadata":{},"sourceType":"module"}